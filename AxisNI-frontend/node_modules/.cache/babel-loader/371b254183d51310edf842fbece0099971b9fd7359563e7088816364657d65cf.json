{"ast":null,"code":"var _jsxFileName = \"C:\\\\Denis_Dev\\\\AxisNI\\\\AxisNI-frontend\\\\src\\\\components\\\\FileUploader.jsx\",\n  _s = $RefreshSig$();\n// frontend-react/src/components/FileUploader.jsx\nimport React, { useState } from \"react\";\nimport { uploadExcel, uploadCsv } from \"../services/api\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function FileUploader({\n  onDataLoaded\n}) {\n  _s();\n  const [file, setFile] = useState(null);\n  const [fileType, setFileType] = useState(\"excel\");\n  const [sheet, setSheet] = useState(0);\n  const [range, setRange] = useState(\"A1:C10\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const handleUpload = async () => {\n    if (!file) return;\n    setLoading(true);\n    setError(null);\n    try {\n      let response;\n      if (fileType === \"excel\") {\n        response = await uploadExcel(file, sheet, range);\n      } else {\n        response = await uploadCsv(file);\n      }\n      onDataLoaded(response.data);\n    } catch (err) {\n      setError(err.message || \"Upload failed\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      value: fileType,\n      onChange: e => setFileType(e.target.value),\n      style: {\n        marginRight: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"excel\",\n        children: \"Excel (.xlsx)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"csv\",\n        children: \"CSV\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), fileType === \"excel\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: sheet,\n        min: 0,\n        onChange: e => setSheet(Number(e.target.value)),\n        style: {\n          width: 50,\n          marginRight: 10\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: range,\n        onChange: e => setRange(e.target.value),\n        placeholder: \"Range (e.g. A1:C10)\",\n        style: {\n          marginRight: 10\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      disabled: loading,\n      children: loading ? \"Uploading...\" : \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(FileUploader, \"Aw7dyzYaQp1t2tc6JusSbTKDo8c=\");\n_c = FileUploader;\nvar _c;\n$RefreshReg$(_c, \"FileUploader\");","map":{"version":3,"names":["React","useState","uploadExcel","uploadCsv","jsxDEV","_jsxDEV","Fragment","_Fragment","FileUploader","onDataLoaded","_s","file","setFile","fileType","setFileType","sheet","setSheet","range","setRange","loading","setLoading","error","setError","handleFileChange","e","target","files","handleUpload","response","data","err","message","style","marginBottom","children","value","onChange","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","type","min","Number","width","placeholder","onClick","disabled","color","_c","$RefreshReg$"],"sources":["C:/Denis_Dev/AxisNI/AxisNI-frontend/src/components/FileUploader.jsx"],"sourcesContent":["// frontend-react/src/components/FileUploader.jsx\r\nimport React, { useState } from \"react\";\r\nimport { uploadExcel, uploadCsv } from \"../services/api\";\r\n\r\nexport default function FileUploader({ onDataLoaded }) {\r\n  const [file, setFile] = useState(null);\r\n  const [fileType, setFileType] = useState(\"excel\");\r\n  const [sheet, setSheet] = useState(0);\r\n  const [range, setRange] = useState(\"A1:C10\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const handleFileChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!file) return;\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      let response;\r\n      if (fileType === \"excel\") {\r\n        response = await uploadExcel(file, sheet, range);\r\n      } else {\r\n        response = await uploadCsv(file);\r\n      }\r\n      onDataLoaded(response.data);\r\n    } catch (err) {\r\n      setError(err.message || \"Upload failed\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ marginBottom: 20 }}>\r\n      <select\r\n        value={fileType}\r\n        onChange={(e) => setFileType(e.target.value)}\r\n        style={{ marginRight: 10 }}\r\n      >\r\n        <option value=\"excel\">Excel (.xlsx)</option>\r\n        <option value=\"csv\">CSV</option>\r\n      </select>\r\n      {fileType === \"excel\" && (\r\n        <>\r\n          <input\r\n            type=\"number\"\r\n            value={sheet}\r\n            min={0}\r\n            onChange={(e) => setSheet(Number(e.target.value))}\r\n            style={{ width: 50, marginRight: 10 }}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            value={range}\r\n            onChange={(e) => setRange(e.target.value)}\r\n            placeholder=\"Range (e.g. A1:C10)\"\r\n            style={{ marginRight: 10 }}\r\n          />\r\n        </>\r\n      )}\r\n      <input type=\"file\" onChange={handleFileChange} />\r\n      <button onClick={handleUpload} disabled={loading}>\r\n        {loading ? \"Uploading...\" : \"Upload\"}\r\n      </button>\r\n      {error && <div style={{ color: \"red\" }}>{error}</div>}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,EAAEC,SAAS,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEzD,eAAe,SAASC,YAAYA,CAAC;EAAEC;AAAa,CAAC,EAAE;EAAAC,EAAA;EACrD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,OAAO,CAAC;EACjD,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,QAAQ,CAAC;EAC5C,MAAM,CAACkB,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACoB,KAAK,EAAEC,QAAQ,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMsB,gBAAgB,GAAIC,CAAC,IAAK;IAC9BZ,OAAO,CAACY,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAC5B,CAAC;EAED,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI,CAAChB,IAAI,EAAE;IACXS,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACF,IAAIM,QAAQ;MACZ,IAAIf,QAAQ,KAAK,OAAO,EAAE;QACxBe,QAAQ,GAAG,MAAM1B,WAAW,CAACS,IAAI,EAAEI,KAAK,EAAEE,KAAK,CAAC;MAClD,CAAC,MAAM;QACLW,QAAQ,GAAG,MAAMzB,SAAS,CAACQ,IAAI,CAAC;MAClC;MACAF,YAAY,CAACmB,QAAQ,CAACC,IAAI,CAAC;IAC7B,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZR,QAAQ,CAACQ,GAAG,CAACC,OAAO,IAAI,eAAe,CAAC;IAC1C,CAAC,SAAS;MACRX,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACEf,OAAA;IAAK2B,KAAK,EAAE;MAAEC,YAAY,EAAE;IAAG,CAAE;IAAAC,QAAA,gBAC/B7B,OAAA;MACE8B,KAAK,EAAEtB,QAAS;MAChBuB,QAAQ,EAAGZ,CAAC,IAAKV,WAAW,CAACU,CAAC,CAACC,MAAM,CAACU,KAAK,CAAE;MAC7CH,KAAK,EAAE;QAAEK,WAAW,EAAE;MAAG,CAAE;MAAAH,QAAA,gBAE3B7B,OAAA;QAAQ8B,KAAK,EAAC,OAAO;QAAAD,QAAA,EAAC;MAAa;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC5CpC,OAAA;QAAQ8B,KAAK,EAAC,KAAK;QAAAD,QAAA,EAAC;MAAG;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,EACR5B,QAAQ,KAAK,OAAO,iBACnBR,OAAA,CAAAE,SAAA;MAAA2B,QAAA,gBACE7B,OAAA;QACEqC,IAAI,EAAC,QAAQ;QACbP,KAAK,EAAEpB,KAAM;QACb4B,GAAG,EAAE,CAAE;QACPP,QAAQ,EAAGZ,CAAC,IAAKR,QAAQ,CAAC4B,MAAM,CAACpB,CAAC,CAACC,MAAM,CAACU,KAAK,CAAC,CAAE;QAClDH,KAAK,EAAE;UAAEa,KAAK,EAAE,EAAE;UAAER,WAAW,EAAE;QAAG;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvC,CAAC,eACFpC,OAAA;QACEqC,IAAI,EAAC,MAAM;QACXP,KAAK,EAAElB,KAAM;QACbmB,QAAQ,EAAGZ,CAAC,IAAKN,QAAQ,CAACM,CAAC,CAACC,MAAM,CAACU,KAAK,CAAE;QAC1CW,WAAW,EAAC,qBAAqB;QACjCd,KAAK,EAAE;UAAEK,WAAW,EAAE;QAAG;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC;IAAA,eACF,CACH,eACDpC,OAAA;MAAOqC,IAAI,EAAC,MAAM;MAACN,QAAQ,EAAEb;IAAiB;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjDpC,OAAA;MAAQ0C,OAAO,EAAEpB,YAAa;MAACqB,QAAQ,EAAE7B,OAAQ;MAAAe,QAAA,EAC9Cf,OAAO,GAAG,cAAc,GAAG;IAAQ;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC,EACRpB,KAAK,iBAAIhB,OAAA;MAAK2B,KAAK,EAAE;QAAEiB,KAAK,EAAE;MAAM,CAAE;MAAAf,QAAA,EAAEb;IAAK;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClD,CAAC;AAEV;AAAC/B,EAAA,CAnEuBF,YAAY;AAAA0C,EAAA,GAAZ1C,YAAY;AAAA,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}