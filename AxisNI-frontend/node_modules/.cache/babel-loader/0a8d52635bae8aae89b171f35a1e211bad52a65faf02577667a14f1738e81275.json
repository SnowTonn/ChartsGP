{"ast":null,"code":"var _jsxFileName = \"C:\\\\Denis_Dev\\\\AxisNI\\\\AxisNI-frontend\\\\src\\\\components\\\\ChartCreator.jsx\",\n  _s = $RefreshSig$();\n// src/components/ChartCreator.jsx\nimport React, { useState, useMemo } from \"react\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport Highcharts from \"./utils/highcharts-config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst chartTypes = [\"column\", \"bar\", \"line\", \"pie\", \"area\"];\nexport default function ChartCreator({\n  data,\n  onSave\n}) {\n  _s();\n  const keys = Object.keys(data[0] || {});\n  const [chartType, setChartType] = useState(\"column\");\n  const [xKey, setXKey] = useState(() => keys[0] || \"\");\n  const [yKeys, setYKeys] = useState(() => keys[1] ? [keys[1]] : []);\n  const [drilldownKeys, setDrilldownKeys] = useState([]);\n  const [title, setTitle] = useState(\"My Chart\");\n  const [showSecondChart, setShowSecondChart] = useState(true);\n  const [showDataLabels, setShowDataLabels] = useState(true);\n  const [showLegend, setShowLegend] = useState(true); // \n\n  const availableDrilldownKeys = keys.filter(k => k !== xKey && !yKeys.includes(k));\n  const handleDrilldownKeysChange = e => {\n    const selectedOptions = Array.from(e.target.selectedOptions).map(o => o.value);\n    setDrilldownKeys(selectedOptions);\n  };\n  const {\n    series,\n    drilldown\n  } = useMemo(() => {\n    if (!xKey || yKeys.length === 0) return {\n      series: [],\n      drilldown: undefined\n    };\n    const drilldownSeries = [];\n    const seenDrilldowns = new Set();\n    const seriesByMetric = yKeys.map(metric => {\n      const metricSeries = data.map(row => {\n        const category = row[xKey];\n        const yValue = Number(row[metric]) || 0;\n        if (!seenDrilldowns.has(category)) {\n          seenDrilldowns.add(category);\n          const drilldownData = drilldownKeys.map(key => [key, Number(row[key]) || 0]);\n          drilldownSeries.push({\n            id: category,\n            name: `${category} Breakdown`,\n            data: drilldownData\n          });\n        }\n        return {\n          name: category,\n          y: yValue,\n          drilldown: category\n        };\n      });\n      return {\n        name: metric,\n        colorByPoint: yKeys.length === 1,\n        data: metricSeries\n      };\n    });\n    return {\n      series: seriesByMetric,\n      drilldown: {\n        series: drilldownSeries\n      }\n    };\n  }, [data, xKey, yKeys, drilldownKeys]);\n  const isPieChart = chartType === \"pie\";\n  const options = {\n    chart: {\n      type: chartType,\n      height: 550\n    },\n    title: {\n      text: title || yKeys.join(\", \")\n    },\n    xAxis: {\n      type: \"category\",\n      title: {\n        text: xKey\n      }\n    },\n    yAxis: {\n      title: {\n        text: yKeys.length === 1 ? yKeys[0] : \"Metrics\"\n      },\n      labels: {\n        format: \"£{value}M\"\n      }\n    },\n    legend: {\n      enabled: showLegend\n    },\n    // \n    plotOptions: {\n      series: {\n        borderWidth: 0,\n        dataLabels: {\n          enabled: showDataLabels,\n          format: isPieChart ? \"<b>{point.name}</b>: {point.percentage:.2f} %\" : \"£{point.y:.2f}M\"\n        }\n      },\n      pie: {\n        allowPointSelect: true,\n        cursor: \"pointer\",\n        dataLabels: {\n          enabled: showDataLabels,\n          format: \"<b>{point.name}</b>: {point.percentage:.2f} %\"\n        }\n      }\n    },\n    tooltip: {\n      pointFormat: isPieChart ? \"<b>{point.y}</b> ({point.percentage:.2f}%)\" : \"<b>£{point.y:.2f}M</b>\"\n    },\n    series,\n    drilldown\n  };\n  const secondChartSeries = useMemo(() => {\n    if (drilldownKeys.length === 0) return [];\n    return drilldownKeys.map(key => {\n      const total = data.reduce((sum, row) => sum + (Number(row[key]) || 0), 0);\n      return {\n        name: key,\n        y: total\n      };\n    });\n  }, [data, drilldownKeys]);\n  const secondChartOptions = {\n    chart: {\n      type: \"pie\"\n    },\n    title: {\n      text: \"Summary of Selected Drilldown Keys\"\n    },\n    plotOptions: {\n      pie: {\n        allowPointSelect: true,\n        cursor: \"pointer\",\n        dataLabels: {\n          enabled: showDataLabels,\n          format: \"<b>{point.name}</b>: {point.percentage:.2f} %\"\n        }\n      }\n    },\n    tooltip: {\n      pointFormat: \"<b>{point.y}</b> ({point.percentage:.2f} %)\"\n    },\n    series: [{\n      name: \"Total\",\n      colorByPoint: true,\n      data: secondChartSeries\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"1rem\",\n      maxWidth: 700\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Create Chart with Drilldown\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Chart Title\",\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      style: {\n        marginBottom: 12,\n        width: \"100%\",\n        padding: 6,\n        fontSize: 16\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        gap: 12,\n        flexWrap: \"wrap\",\n        marginBottom: 12\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: chartType,\n        onChange: e => setChartType(e.target.value),\n        style: {\n          flex: 1,\n          minWidth: 120,\n          padding: 6\n        },\n        children: chartTypes.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: type,\n          children: type\n        }, type, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: xKey,\n        onChange: e => {\n          setXKey(e.target.value);\n          setDrilldownKeys([]);\n        },\n        style: {\n          flex: 1,\n          minWidth: 120,\n          padding: 6\n        },\n        title: \"Select one X metrics\",\n        children: keys.map(k => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: k,\n          children: k\n        }, k, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        multiple: true,\n        value: yKeys,\n        onChange: e => {\n          const selected = Array.from(e.target.selectedOptions).map(o => o.value);\n          setYKeys(selected);\n          setDrilldownKeys([]);\n        },\n        style: {\n          flex: 3,\n          minWidth: 180,\n          padding: 6,\n          height: 150\n        },\n        title: \"Select one or more Y metrics\",\n        children: keys.map(k => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: k,\n          children: k\n        }, k, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        multiple: true,\n        value: drilldownKeys,\n        onChange: handleDrilldownKeysChange,\n        style: {\n          flex: 1,\n          minWidth: 250,\n          padding: 6,\n          height: 150\n        },\n        title: \"Select categories to show on drilldown (Ctrl/Cmd+click for multiple)\",\n        children: availableDrilldownKeys.map(k => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: k,\n          children: k\n        }, k, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      style: {\n        display: \"block\",\n        marginBottom: 12\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: showDataLabels,\n        onChange: () => setShowDataLabels(prev => !prev),\n        style: {\n          marginRight: 6\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this), \"Show values on chart\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      style: {\n        display: \"block\",\n        marginBottom: 12\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: showLegend,\n        onChange: () => setShowLegend(prev => !prev),\n        style: {\n          marginRight: 6\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), \"Show legend\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HighchartsReact, {\n      highcharts: Highcharts,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this), secondChartSeries.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          display: \"block\",\n          marginBottom: 8\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: showSecondChart,\n          onChange: () => setShowSecondChart(prev => !prev),\n          style: {\n            marginRight: 6\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }, this), \"Show summary chart\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 11\n      }, this), showSecondChart && /*#__PURE__*/_jsxDEV(HighchartsReact, {\n        highcharts: Highcharts,\n        options: secondChartOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this);\n}\n_s(ChartCreator, \"ywI2K4Ag+3f/l0rjOYi12MCiOC8=\");\n_c = ChartCreator;\nvar _c;\n$RefreshReg$(_c, \"ChartCreator\");","map":{"version":3,"names":["React","useState","useMemo","HighchartsReact","Highcharts","jsxDEV","_jsxDEV","chartTypes","ChartCreator","data","onSave","_s","keys","Object","chartType","setChartType","xKey","setXKey","yKeys","setYKeys","drilldownKeys","setDrilldownKeys","title","setTitle","showSecondChart","setShowSecondChart","showDataLabels","setShowDataLabels","showLegend","setShowLegend","availableDrilldownKeys","filter","k","includes","handleDrilldownKeysChange","e","selectedOptions","Array","from","target","map","o","value","series","drilldown","length","undefined","drilldownSeries","seenDrilldowns","Set","seriesByMetric","metric","metricSeries","row","category","yValue","Number","has","add","drilldownData","key","push","id","name","y","colorByPoint","isPieChart","options","chart","type","height","text","join","xAxis","yAxis","labels","format","legend","enabled","plotOptions","borderWidth","dataLabels","pie","allowPointSelect","cursor","tooltip","pointFormat","secondChartSeries","total","reduce","sum","secondChartOptions","style","padding","maxWidth","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","marginBottom","width","fontSize","display","gap","flexWrap","flex","minWidth","multiple","selected","checked","prev","marginRight","highcharts","marginTop","_c","$RefreshReg$"],"sources":["C:/Denis_Dev/AxisNI/AxisNI-frontend/src/components/ChartCreator.jsx"],"sourcesContent":["// src/components/ChartCreator.jsx\r\nimport React, { useState, useMemo } from \"react\";\r\nimport HighchartsReact from \"highcharts-react-official\";\r\nimport Highcharts from \"./utils/highcharts-config\";\r\n\r\nconst chartTypes = [\"column\", \"bar\", \"line\", \"pie\", \"area\"];\r\n\r\nexport default function ChartCreator({ data, onSave }) {\r\n  const keys = Object.keys(data[0] || {});\r\n  const [chartType, setChartType] = useState(\"column\");\r\n  const [xKey, setXKey] = useState(() => keys[0] || \"\");\r\n  const [yKeys, setYKeys] = useState(() => (keys[1] ? [keys[1]] : []));\r\n  const [drilldownKeys, setDrilldownKeys] = useState([]);\r\n  const [title, setTitle] = useState(\"My Chart\");\r\n  const [showSecondChart, setShowSecondChart] = useState(true);\r\n  const [showDataLabels, setShowDataLabels] = useState(true);\r\n  const [showLegend, setShowLegend] = useState(true); // \r\n\r\n  const availableDrilldownKeys = keys.filter(\r\n    (k) => k !== xKey && !yKeys.includes(k)\r\n  );\r\n\r\n  const handleDrilldownKeysChange = (e) => {\r\n    const selectedOptions = Array.from(e.target.selectedOptions).map(\r\n      (o) => o.value\r\n    );\r\n    setDrilldownKeys(selectedOptions);\r\n  };\r\n\r\n  const { series, drilldown } = useMemo(() => {\r\n    if (!xKey || yKeys.length === 0) return { series: [], drilldown: undefined };\r\n\r\n    const drilldownSeries = [];\r\n    const seenDrilldowns = new Set();\r\n\r\n    const seriesByMetric = yKeys.map((metric) => {\r\n      const metricSeries = data.map((row) => {\r\n        const category = row[xKey];\r\n        const yValue = Number(row[metric]) || 0;\r\n\r\n        if (!seenDrilldowns.has(category)) {\r\n          seenDrilldowns.add(category);\r\n          const drilldownData = drilldownKeys.map((key) => [\r\n            key,\r\n            Number(row[key]) || 0,\r\n          ]);\r\n          drilldownSeries.push({\r\n            id: category,\r\n            name: `${category} Breakdown`,\r\n            data: drilldownData,\r\n          });\r\n        }\r\n\r\n        return {\r\n          name: category,\r\n          y: yValue,\r\n          drilldown: category,\r\n        };\r\n      });\r\n\r\n      return {\r\n        name: metric,\r\n        colorByPoint: yKeys.length === 1,\r\n        data: metricSeries,\r\n      };\r\n    });\r\n\r\n    return {\r\n      series: seriesByMetric,\r\n      drilldown: {\r\n        series: drilldownSeries,\r\n      },\r\n    };\r\n  }, [data, xKey, yKeys, drilldownKeys]);\r\n\r\n  const isPieChart = chartType === \"pie\";\r\n\r\n  const options = {\r\n    chart: { type: chartType, height: 550 },\r\n    title: { text: title || yKeys.join(\", \") },\r\n    xAxis: {\r\n      type: \"category\",\r\n      title: { text: xKey },\r\n    },\r\n    yAxis: {\r\n      title: { text: yKeys.length === 1 ? yKeys[0] : \"Metrics\" },\r\n      labels: {\r\n        format: \"£{value}M\",\r\n      },\r\n    },\r\n    legend: { enabled: showLegend }, // \r\n    plotOptions: {\r\n      series: {\r\n        borderWidth: 0,\r\n        dataLabels: {\r\n          enabled: showDataLabels,\r\n          format: isPieChart\r\n            ? \"<b>{point.name}</b>: {point.percentage:.2f} %\"\r\n            : \"£{point.y:.2f}M\",\r\n        },\r\n      },\r\n      pie: {\r\n        allowPointSelect: true,\r\n        cursor: \"pointer\",\r\n        dataLabels: {\r\n          enabled: showDataLabels,\r\n          format: \"<b>{point.name}</b>: {point.percentage:.2f} %\",\r\n        },\r\n      },\r\n    },\r\n    tooltip: {\r\n      pointFormat: isPieChart\r\n        ? \"<b>{point.y}</b> ({point.percentage:.2f}%)\"\r\n        : \"<b>£{point.y:.2f}M</b>\",\r\n    },\r\n    series,\r\n    drilldown,\r\n  };\r\n\r\n  const secondChartSeries = useMemo(() => {\r\n    if (drilldownKeys.length === 0) return [];\r\n\r\n    return drilldownKeys.map((key) => {\r\n      const total = data.reduce((sum, row) => sum + (Number(row[key]) || 0), 0);\r\n      return { name: key, y: total };\r\n    });\r\n  }, [data, drilldownKeys]);\r\n\r\n  const secondChartOptions = {\r\n    chart: { type: \"pie\" },\r\n    title: { text: \"Summary of Selected Drilldown Keys\" },\r\n    plotOptions: {\r\n      pie: {\r\n        allowPointSelect: true,\r\n        cursor: \"pointer\",\r\n        dataLabels: {\r\n          enabled: showDataLabels,\r\n          format: \"<b>{point.name}</b>: {point.percentage:.2f} %\",\r\n        },\r\n      },\r\n    },\r\n    tooltip: {\r\n      pointFormat: \"<b>{point.y}</b> ({point.percentage:.2f} %)\",\r\n    },\r\n    series: [\r\n      {\r\n        name: \"Total\",\r\n        colorByPoint: true,\r\n        data: secondChartSeries,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: \"1rem\", maxWidth: 700 }}>\r\n      <h3>Create Chart with Drilldown</h3>\r\n\r\n      <input\r\n        placeholder=\"Chart Title\"\r\n        value={title}\r\n        onChange={(e) => setTitle(e.target.value)}\r\n        style={{ marginBottom: 12, width: \"100%\", padding: 6, fontSize: 16 }}\r\n      />\r\n\r\n      <div style={{ display: \"flex\", gap: 12, flexWrap: \"wrap\", marginBottom: 12 }}>\r\n        <select\r\n          value={chartType}\r\n          onChange={(e) => setChartType(e.target.value)}\r\n          style={{ flex: 1, minWidth: 120, padding: 6 }}\r\n        >\r\n          {chartTypes.map((type) => (\r\n            <option key={type} value={type}>\r\n              {type}\r\n            </option>\r\n          ))}\r\n        </select>\r\n\r\n        <select\r\n          value={xKey}\r\n          onChange={(e) => {\r\n            setXKey(e.target.value);\r\n            setDrilldownKeys([]);\r\n          }}\r\n          style={{ flex: 1, minWidth: 120, padding: 6 }}\r\n          title=\"Select one X metrics\"\r\n        >\r\n          {keys.map((k) => (\r\n            <option key={k} value={k}>\r\n              {k}\r\n            </option>\r\n          ))}\r\n        </select>\r\n\r\n        <select\r\n          multiple\r\n          value={yKeys}\r\n          onChange={(e) => {\r\n            const selected = Array.from(e.target.selectedOptions).map((o) => o.value);\r\n            setYKeys(selected);\r\n            setDrilldownKeys([]);\r\n          }}\r\n          style={{ flex: 3, minWidth: 180, padding: 6, height: 150 }}\r\n          title=\"Select one or more Y metrics\"\r\n        >\r\n          {keys.map((k) => (\r\n            <option key={k} value={k}>\r\n              {k}\r\n            </option>\r\n          ))}\r\n        </select>\r\n\r\n        <select\r\n          multiple\r\n          value={drilldownKeys}\r\n          onChange={handleDrilldownKeysChange}\r\n          style={{ flex: 1, minWidth: 250, padding: 6, height: 150 }}\r\n          title=\"Select categories to show on drilldown (Ctrl/Cmd+click for multiple)\"\r\n        >\r\n          {availableDrilldownKeys.map((k) => (\r\n            <option key={k} value={k}>\r\n              {k}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      {/* Data Labels Toggle */}\r\n      <label style={{ display: \"block\", marginBottom: 12 }}>\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={showDataLabels}\r\n          onChange={() => setShowDataLabels((prev) => !prev)}\r\n          style={{ marginRight: 6 }}\r\n        />\r\n        Show values on chart\r\n      </label>\r\n\r\n      {/* Legend Toggle  */}\r\n      <label style={{ display: \"block\", marginBottom: 12 }}>\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={showLegend}\r\n          onChange={() => setShowLegend((prev) => !prev)}\r\n          style={{ marginRight: 6 }}\r\n        />\r\n        Show legend\r\n      </label>\r\n\r\n      {/* Main Chart */}\r\n      <HighchartsReact highcharts={Highcharts} options={options} />\r\n\r\n      {/* Toggle and Second Chart */}\r\n      {secondChartSeries.length > 0 && (\r\n        <div style={{ marginTop: 20 }}>\r\n          <label style={{ display: \"block\", marginBottom: 8 }}>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={showSecondChart}\r\n              onChange={() => setShowSecondChart((prev) => !prev)}\r\n              style={{ marginRight: 6 }}\r\n            />\r\n            Show summary chart\r\n          </label>\r\n\r\n          {showSecondChart && (\r\n            <HighchartsReact highcharts={Highcharts} options={secondChartOptions} />\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}