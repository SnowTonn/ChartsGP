{"ast":null,"code":"import _objectSpread from\"C:/Denis_Dev/AxisNI/AxisNI-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState}from\"react\";import{uploadExcel,uploadCsv,getSheetNames}from\"../services/api\";import ChartCreator from\"./ChartCreator\";import{Link}from\"react-router-dom\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";export default function FileUploader(){const[fileEntries,setFileEntries]=useState([]);const[mergedData,setMergedData]=useState([]);const[showDataPreview,setShowDataPreview]=useState(false);const[showUploaderPanel,setShowUploaderPanel]=useState(true);// Array of chart configs: { id, title, xKey, yKey, drilldownKeys }\nconst[charts,setCharts]=useState([]);const buttonStyle={fontWeight:\"600\",fontSize:\"0.85rem\",padding:\"6px 12px\",cursor:\"pointer\",borderRadius:\"4px\",border:\"1px solid #555\",backgroundColor:\"#fff\",minWidth:\"120px\",textAlign:\"center\",userSelect:\"none\",margin:\"4px\",transition:\"all 0.2s ease\",display:\"inline-flex\",alignItems:\"center\",justifyContent:\"center\",gap:\"6px\"};const hoverFocusStyle={backgroundColor:\"#007bff\",borderColor:\"#007bff\",color:\"#fff\"};function InteractiveButton(_ref){let{children,onClick}=_ref;const[hover,setHover]=React.useState(false);return/*#__PURE__*/_jsx(\"button\",{onClick:onClick,style:_objectSpread(_objectSpread({},buttonStyle),hover?hoverFocusStyle:{}),onMouseEnter:()=>setHover(true),onMouseLeave:()=>setHover(false),onFocus:()=>setHover(true),onBlur:()=>setHover(false),type:\"button\",children:children});}const handleFilesChange=async e=>{const selectedFiles=Array.from(e.target.files);const newEntries=[];for(const file of selectedFiles){const ext=file.name.split(\".\").pop().toLowerCase();const fileType=ext===\"csv\"?\"csv\":\"excel\";let sheetNames=[];if(fileType===\"excel\"){try{const res=await getSheetNames(file);sheetNames=res.data.sheets||[];}catch(_unused){alert(\"Failed to get sheet names for \".concat(file.name));}}newEntries.push({file,fileType,sheetIndex:0,range:\"A3:H19\",sheetNames});}setFileEntries(newEntries);setMergedData([]);setCharts([]);// reset charts\n};const updateEntry=(index,field,value)=>{setFileEntries(prev=>{const updated=[...prev];updated[index][field]=value;return updated;});};const handleUpload=async()=>{const datasets=[];for(let i=0;i<fileEntries.length;i++){const{file,fileType,sheetIndex,range}=fileEntries[i];try{const res=fileType===\"excel\"?await uploadExcel(file,sheetIndex,range):await uploadCsv(file);const data=res.data;if(Array.isArray(data)){// Prefix columns to avoid collisions\nconst prefixed=data.map(row=>{const newRow={};for(const[key,value]of Object.entries(row)){newRow[\"F\".concat(i+1,\"_\").concat(key)]=value;}return newRow;});datasets.push(prefixed);}}catch(_unused2){alert(\"Upload failed for \".concat(file.name));}}// Merge datasets horizontally by row index\nconst maxRows=Math.max(...datasets.map(d=>d.length));const merged=[];for(let i=0;i<maxRows;i++){const row={};for(const dataset of datasets){const currentRow=dataset[i]||{};Object.assign(row,currentRow);}merged.push(row);}setMergedData(merged);setShowDataPreview(true);// Initialize with 1 empty chart config\nsetCharts([{id:1,title:\"Chart 1\",xKey:\"\",yKey:\"\",drilldownKeys:[]}]);};// Add a new blank chart config\nconst addChart=()=>{setCharts(prev=>[...prev,{id:prev.length+1,title:\"Chart \".concat(prev.length+1),xKey:\"\",yKey:\"\",drilldownKeys:[]}]);};// Remove chart by id\nconst removeChart=id=>{setCharts(prev=>prev.filter(c=>c.id!==id));};// Update chart config\nconst updateChart=(id,newConfig)=>{setCharts(prev=>prev.map(c=>c.id===id?_objectSpread(_objectSpread({},c),newConfig):c));};return/*#__PURE__*/_jsxs(\"div\",{style:{padding:\"1.5rem\",fontFamily:\"Arial, sans-serif\"},children:[/*#__PURE__*/_jsx(InteractiveButton,{onClick:()=>setShowUploaderPanel(prev=>!prev),children:showUploaderPanel?\"▼ Hide Uploader\":\"▶ Show Uploader\"}),/*#__PURE__*/_jsx(InteractiveButton,{onClick:addChart,children:/*#__PURE__*/_jsx(Link,{to:\"/\",children:\"\\u2190 Back to Dashboard\"})}),showUploaderPanel&&/*#__PURE__*/_jsxs(\"div\",{style:{border:\"1px solid #ccc\",borderRadius:8,padding:\"1rem\",background:\"#f9f9f9\",marginBottom:\"1.5rem\"},children:[/*#__PURE__*/_jsx(\"h2\",{style:{textAlign:\"center\",fontSize:\"1.5rem\",marginBottom:\"1rem\"},children:\"\\uD83C\\uDF40 Upload & Combine Files\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",multiple:true,onChange:handleFilesChange}),fileEntries.map((entry,idx)=>/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:16,padding:\"1rem\",border:\"1px solid #ddd\",borderRadius:6,background:\"#fff\"},children:[/*#__PURE__*/_jsx(\"strong\",{children:entry.file.name}),/*#__PURE__*/_jsxs(\"div\",{style:{display:\"grid\",gridTemplateColumns:\"repeat(auto-fit, minmax(180px, 1fr))\",gap:\"0.5rem\",marginTop:\"0.5rem\"},children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"File Type:\"}),/*#__PURE__*/_jsxs(\"select\",{value:entry.fileType,onChange:e=>updateEntry(idx,\"fileType\",e.target.value),style:{width:\"100%\"},children:[/*#__PURE__*/_jsx(\"option\",{value:\"excel\",children:\"Excel\"}),/*#__PURE__*/_jsx(\"option\",{value:\"csv\",children:\"CSV\"})]})]}),entry.fileType===\"excel\"&&entry.sheetNames.length>0&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Sheet:\"}),/*#__PURE__*/_jsx(\"select\",{value:entry.sheetIndex,onChange:e=>updateEntry(idx,\"sheetIndex\",Number(e.target.value)),style:{width:\"100%\"},children:entry.sheetNames.map((name,i)=>/*#__PURE__*/_jsx(\"option\",{value:i,children:name},i))})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Range:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:entry.range,onChange:e=>updateEntry(idx,\"range\",e.target.value),style:{width:\"100%\"}})]})]})]})]},idx)),fileEntries.length>0&&/*#__PURE__*/_jsx(\"div\",{style:{marginTop:\"1rem\"},children:/*#__PURE__*/_jsx(\"button\",{onClick:handleUpload,style:{padding:\"0.6rem 1.2rem\",background:\"#28a745\",color:\"#fff\",border:\"none\",borderRadius:\"6px\",cursor:\"pointer\"},children:\"Upload and Merge\"})})]}),mergedData.length>0&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{style:{marginBottom:10},children:/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:showDataPreview,onChange:()=>setShowDataPreview(prev=>!prev)}),\" \",\"Show Merged Data\"]})}),showDataPreview&&/*#__PURE__*/_jsx(\"div\",{style:{overflowX:\"auto\",maxWidth:\"100%\",border:\"1px solid #ddd\",borderRadius:4,padding:8,background:\"#fff\"},children:/*#__PURE__*/_jsxs(\"table\",{style:{borderCollapse:\"collapse\",width:\"100%\"},children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsx(\"tr\",{children:Object.keys(mergedData[0]||{}).map(key=>/*#__PURE__*/_jsx(\"th\",{style:{border:\"1px solid #ccc\",padding:\"4px 8px\",whiteSpace:\"nowrap\",background:\"#f0f0f0\"},children:key},key))})}),/*#__PURE__*/_jsx(\"tbody\",{children:mergedData.map((row,i)=>/*#__PURE__*/_jsx(\"tr\",{children:Object.values(row).map((val,j)=>/*#__PURE__*/_jsx(\"td\",{style:{border:\"1px solid #eee\",padding:\"4px 8px\",whiteSpace:\"wrap\",wordBreak:\"break-word\"},children:val},j))},i))})]})})]}),mergedData.length>0&&/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:20},children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Charts\"}),/*#__PURE__*/_jsx(InteractiveButton,{onClick:addChart,children:\"+ Add Chart\"}),/*#__PURE__*/_jsx(\"div\",{style:{display:\"grid\",gridTemplateColumns:\"repeat(auto-fit, minmax(500px, 2fr))\",gap:16,marginTop:12},children:charts.map(_ref2=>{let{id,title,xKey,yKey,drilldownKeys}=_ref2;return/*#__PURE__*/_jsxs(\"div\",{style:{border:\"1px solid #999\",padding:10,borderRadius:6,background:\"#fafafa\",position:\"relative\",minWidth:350,minHeight:400,display:\"flex\",flexDirection:\"column\"},children:[/*#__PURE__*/_jsx(\"button\",{style:{position:\"absolute\",top:8,right:8,cursor:\"pointer\",fontSize:18,border:\"none\",background:\"transparent\",color:\"#555\"},onClick:()=>removeChart(id),title:\"Remove chart\",children:\"\\xD7\"}),/*#__PURE__*/_jsx(ChartCreator,{data:mergedData,onSave:newTitle=>updateChart(id,{title:newTitle}),chartTypeInitial:\"column\",titleInitial:title,xKeyInitial:xKey,yKeyInitial:yKey,drilldownKeysInitial:drilldownKeys,onChange:newConfig=>updateChart(id,newConfig)})]},id);})})]})]});}","map":{"version":3,"names":["React","useState","uploadExcel","uploadCsv","getSheetNames","ChartCreator","Link","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","FileUploader","fileEntries","setFileEntries","mergedData","setMergedData","showDataPreview","setShowDataPreview","showUploaderPanel","setShowUploaderPanel","charts","setCharts","buttonStyle","fontWeight","fontSize","padding","cursor","borderRadius","border","backgroundColor","minWidth","textAlign","userSelect","margin","transition","display","alignItems","justifyContent","gap","hoverFocusStyle","borderColor","color","InteractiveButton","_ref","children","onClick","hover","setHover","style","_objectSpread","onMouseEnter","onMouseLeave","onFocus","onBlur","type","handleFilesChange","e","selectedFiles","Array","from","target","files","newEntries","file","ext","name","split","pop","toLowerCase","fileType","sheetNames","res","data","sheets","_unused","alert","concat","push","sheetIndex","range","updateEntry","index","field","value","prev","updated","handleUpload","datasets","i","length","isArray","prefixed","map","row","newRow","key","Object","entries","_unused2","maxRows","Math","max","d","merged","dataset","currentRow","assign","id","title","xKey","yKey","drilldownKeys","addChart","removeChart","filter","c","updateChart","newConfig","fontFamily","to","background","marginBottom","multiple","onChange","entry","idx","marginTop","gridTemplateColumns","width","Number","checked","overflowX","maxWidth","borderCollapse","keys","whiteSpace","values","val","j","wordBreak","_ref2","position","minHeight","flexDirection","top","right","onSave","newTitle","chartTypeInitial","titleInitial","xKeyInitial","yKeyInitial","drilldownKeysInitial"],"sources":["C:/Denis_Dev/AxisNI/AxisNI-frontend/src/components/FileUploader.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { uploadExcel, uploadCsv, getSheetNames } from \"../services/api\";\r\nimport ChartCreator from \"./ChartCreator\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function FileUploader() {\r\n  const [fileEntries, setFileEntries] = useState([]);\r\n  const [mergedData, setMergedData] = useState([]);\r\n  const [showDataPreview, setShowDataPreview] = useState(false);\r\n  const [showUploaderPanel, setShowUploaderPanel] = useState(true);\r\n\r\n  // Array of chart configs: { id, title, xKey, yKey, drilldownKeys }\r\n  const [charts, setCharts] = useState([]);\r\n  const buttonStyle = {\r\n    fontWeight: \"600\",\r\n    fontSize: \"0.85rem\",\r\n    padding: \"6px 12px\",\r\n    cursor: \"pointer\",\r\n    borderRadius: \"4px\",\r\n    border: \"1px solid #555\",\r\n    backgroundColor: \"#fff\",\r\n    minWidth: \"120px\",\r\n    textAlign: \"center\",\r\n    userSelect: \"none\",\r\n    margin: \"4px\",\r\n    transition: \"all 0.2s ease\",\r\n    display: \"inline-flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    gap: \"6px\",\r\n  };\r\n\r\n  const hoverFocusStyle = {\r\n    backgroundColor: \"#007bff\",\r\n    borderColor: \"#007bff\",\r\n    color: \"#fff\",\r\n  };\r\n\r\n  function InteractiveButton({ children, onClick }) {\r\n    const [hover, setHover] = React.useState(false);\r\n    return (\r\n      <button\r\n        onClick={onClick}\r\n        style={{\r\n          ...buttonStyle,\r\n          ...(hover ? hoverFocusStyle : {}),\r\n        }}\r\n        onMouseEnter={() => setHover(true)}\r\n        onMouseLeave={() => setHover(false)}\r\n        onFocus={() => setHover(true)}\r\n        onBlur={() => setHover(false)}\r\n        type=\"button\"\r\n      >\r\n        {children}\r\n      </button>\r\n    );\r\n  }\r\n\r\n  const handleFilesChange = async (e) => {\r\n    const selectedFiles = Array.from(e.target.files);\r\n    const newEntries = [];\r\n\r\n    for (const file of selectedFiles) {\r\n      const ext = file.name.split(\".\").pop().toLowerCase();\r\n      const fileType = ext === \"csv\" ? \"csv\" : \"excel\";\r\n      let sheetNames = [];\r\n\r\n      if (fileType === \"excel\") {\r\n        try {\r\n          const res = await getSheetNames(file);\r\n          sheetNames = res.data.sheets || [];\r\n        } catch {\r\n          alert(`Failed to get sheet names for ${file.name}`);\r\n        }\r\n      }\r\n\r\n      newEntries.push({\r\n        file,\r\n        fileType,\r\n        sheetIndex: 0,\r\n        range: \"A3:H19\",\r\n        sheetNames,\r\n      });\r\n    }\r\n\r\n    setFileEntries(newEntries);\r\n    setMergedData([]);\r\n    setCharts([]); // reset charts\r\n  };\r\n\r\n  const updateEntry = (index, field, value) => {\r\n    setFileEntries((prev) => {\r\n      const updated = [...prev];\r\n      updated[index][field] = value;\r\n      return updated;\r\n    });\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    const datasets = [];\r\n\r\n    for (let i = 0; i < fileEntries.length; i++) {\r\n      const { file, fileType, sheetIndex, range } = fileEntries[i];\r\n      try {\r\n        const res =\r\n          fileType === \"excel\"\r\n            ? await uploadExcel(file, sheetIndex, range)\r\n            : await uploadCsv(file);\r\n\r\n        const data = res.data;\r\n\r\n        if (Array.isArray(data)) {\r\n          // Prefix columns to avoid collisions\r\n          const prefixed = data.map((row) => {\r\n            const newRow = {};\r\n            for (const [key, value] of Object.entries(row)) {\r\n              newRow[`F${i + 1}_${key}`] = value;\r\n            }\r\n            return newRow;\r\n          });\r\n          datasets.push(prefixed);\r\n        }\r\n      } catch {\r\n        alert(`Upload failed for ${file.name}`);\r\n      }\r\n    }\r\n\r\n    // Merge datasets horizontally by row index\r\n    const maxRows = Math.max(...datasets.map((d) => d.length));\r\n    const merged = [];\r\n\r\n    for (let i = 0; i < maxRows; i++) {\r\n      const row = {};\r\n      for (const dataset of datasets) {\r\n        const currentRow = dataset[i] || {};\r\n        Object.assign(row, currentRow);\r\n      }\r\n      merged.push(row);\r\n    }\r\n\r\n    setMergedData(merged);\r\n    setShowDataPreview(true);\r\n\r\n    // Initialize with 1 empty chart config\r\n    setCharts([{ id: 1, title: \"Chart 1\", xKey: \"\", yKey: \"\", drilldownKeys: [] }]);\r\n  };\r\n\r\n  // Add a new blank chart config\r\n  const addChart = () => {\r\n    setCharts((prev) => [\r\n      ...prev,\r\n      { id: prev.length + 1, title: `Chart ${prev.length + 1}`, xKey: \"\", yKey: \"\", drilldownKeys: [] },\r\n    ]);\r\n  };\r\n\r\n  // Remove chart by id\r\n  const removeChart = (id) => {\r\n    setCharts((prev) => prev.filter((c) => c.id !== id));\r\n  };\r\n\r\n  // Update chart config\r\n  const updateChart = (id, newConfig) => {\r\n    setCharts((prev) =>\r\n      prev.map((c) => (c.id === id ? { ...c, ...newConfig } : c))\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: \"1.5rem\", fontFamily: \"Arial, sans-serif\" }}>\r\n      \r\n\r\n      {/* Roll in/out toggle */}\r\n      <InteractiveButton onClick={() => setShowUploaderPanel((prev) => !prev)}>\r\n        {showUploaderPanel ? \"▼ Hide Uploader\" : \"▶ Show Uploader\"}\r\n      </InteractiveButton>\r\n      <InteractiveButton onClick={addChart}>\r\n            <Link to=\"/\">← Back to Dashboard</Link>\r\n      </InteractiveButton>\r\n      {/* Uploader Panel */}\r\n      {showUploaderPanel && (\r\n        <div\r\n          style={{\r\n            border: \"1px solid #ccc\",\r\n            borderRadius: 8,\r\n            padding: \"1rem\",\r\n            background: \"#f9f9f9\",\r\n            marginBottom: \"1.5rem\",\r\n          }}\r\n        ><h2 style={{ textAlign: \"center\", fontSize: \"1.5rem\", marginBottom: \"1rem\" }}>\r\n            🍀 Upload & Combine Files\r\n          </h2>\r\n           \r\n          <input type=\"file\" multiple onChange={handleFilesChange} /> \r\n\r\n          {fileEntries.map((entry, idx) => (\r\n            <div\r\n              key={idx}\r\n              style={{\r\n                marginTop: 16,\r\n                padding: \"1rem\",\r\n                border: \"1px solid #ddd\",\r\n                borderRadius: 6,\r\n                background: \"#fff\",\r\n              }}\r\n            >\r\n              <strong>{entry.file.name}</strong>\r\n\r\n              <div\r\n                style={{\r\n                  display: \"grid\",\r\n                  gridTemplateColumns: \"repeat(auto-fit, minmax(180px, 1fr))\",\r\n                  gap: \"0.5rem\",\r\n                  marginTop: \"0.5rem\",\r\n                }}\r\n              >\r\n                <div>\r\n                  <label>File Type:</label>\r\n                  <select\r\n                    value={entry.fileType}\r\n                    onChange={(e) => updateEntry(idx, \"fileType\", e.target.value)}\r\n                    style={{ width: \"100%\" }}\r\n                  >\r\n                    <option value=\"excel\">Excel</option>\r\n                    <option value=\"csv\">CSV</option>\r\n                  </select>\r\n                </div>\r\n\r\n                {entry.fileType === \"excel\" && entry.sheetNames.length > 0 && (\r\n                  <>\r\n                    <div>\r\n                      <label>Sheet:</label>\r\n                      <select\r\n                        value={entry.sheetIndex}\r\n                        onChange={(e) =>\r\n                          updateEntry(idx, \"sheetIndex\", Number(e.target.value))\r\n                        }\r\n                        style={{ width: \"100%\" }}\r\n                      >\r\n                        {entry.sheetNames.map((name, i) => (\r\n                          <option key={i} value={i}>\r\n                            {name}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                    </div>\r\n\r\n                    <div>\r\n                      <label>Range:</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        value={entry.range}\r\n                        onChange={(e) => updateEntry(idx, \"range\", e.target.value)}\r\n                        style={{ width: \"100%\" }}\r\n                      />\r\n                    </div>\r\n                  </>\r\n                )}\r\n              </div>\r\n            </div>\r\n          ))}\r\n\r\n          {fileEntries.length > 0 && (\r\n            <div style={{ marginTop: \"1rem\" }}>\r\n              <button\r\n                onClick={handleUpload}\r\n                style={{\r\n                  padding: \"0.6rem 1.2rem\",\r\n                  background: \"#28a745\",\r\n                  color: \"#fff\",\r\n                  border: \"none\",\r\n                  borderRadius: \"6px\",\r\n                  cursor: \"pointer\",\r\n                }}\r\n              >\r\n                Upload and Merge\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {/* Show Merged Data */}\r\n      {mergedData.length > 0 && (\r\n        <>\r\n          <div style={{ marginBottom: 10 }}>\r\n            <label>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={showDataPreview}\r\n                onChange={() => setShowDataPreview((prev) => !prev)}\r\n              />{\" \"}\r\n              Show Merged Data\r\n            </label>\r\n          </div>\r\n\r\n          {showDataPreview && (\r\n            <div\r\n              style={{\r\n                overflowX: \"auto\",\r\n                maxWidth: \"100%\",\r\n                border: \"1px solid #ddd\",\r\n                borderRadius: 4,\r\n                padding: 8,\r\n                background: \"#fff\",\r\n              }}\r\n            >\r\n              <table style={{ borderCollapse: \"collapse\", width: \"100%\" }}>\r\n                <thead>\r\n                  <tr>\r\n                    {Object.keys(mergedData[0] || {}).map((key) => (\r\n                      <th\r\n                        key={key}\r\n                        style={{\r\n                          border: \"1px solid #ccc\",\r\n                          padding: \"4px 8px\",\r\n                          whiteSpace: \"nowrap\",\r\n                          background: \"#f0f0f0\",\r\n                        }}\r\n                      >\r\n                        {key}\r\n                      </th>\r\n                    ))}\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {mergedData.map((row, i) => (\r\n                    <tr key={i}>\r\n                      {Object.values(row).map((val, j) => (\r\n                        <td\r\n                          key={j}\r\n                          style={{\r\n                            border: \"1px solid #eee\",\r\n                            padding: \"4px 8px\",\r\n                            whiteSpace: \"wrap\",\r\n                            wordBreak: \"break-word\",\r\n                          }}\r\n                        >\r\n                          {val}\r\n                        </td>\r\n                      ))}\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n\r\n      {/* Charts Section */}\r\n      {mergedData.length > 0 && (\r\n        <div style={{ marginTop: 20 }}>\r\n          <h3>Charts</h3>\r\n          <InteractiveButton onClick={addChart}>\r\n            + Add Chart\r\n          </InteractiveButton>\r\n          \r\n          <div\r\n            style={{\r\n              display: \"grid\",\r\n              gridTemplateColumns: \"repeat(auto-fit, minmax(500px, 2fr))\",\r\n              gap: 16,\r\n              marginTop: 12,\r\n            }}\r\n          >\r\n            {charts.map(({ id, title, xKey, yKey, drilldownKeys }) => (\r\n              <div\r\n                key={id}\r\n                style={{\r\n                  border: \"1px solid #999\",\r\n                  padding: 10,\r\n                  borderRadius: 6,\r\n                  background: \"#fafafa\",\r\n                  position: \"relative\",\r\n                  minWidth: 350,\r\n                  minHeight: 400,\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                }}\r\n              >\r\n                <button\r\n                  style={{\r\n                    position: \"absolute\",\r\n                    top: 8,\r\n                    right: 8,\r\n                    cursor: \"pointer\",\r\n                    fontSize: 18,\r\n                    border: \"none\",\r\n                    background: \"transparent\",\r\n                    color: \"#555\",\r\n                  }}\r\n                  onClick={() => removeChart(id)}\r\n                  title=\"Remove chart\"\r\n                >\r\n                  &times;\r\n                </button>\r\n\r\n                <ChartCreator\r\n                  data={mergedData}\r\n                  onSave={(newTitle) => updateChart(id, { title: newTitle })}\r\n                  chartTypeInitial=\"column\"\r\n                  titleInitial={title}\r\n                  xKeyInitial={xKey}\r\n                  yKeyInitial={yKey}\r\n                  drilldownKeysInitial={drilldownKeys}\r\n                  onChange={(newConfig) => updateChart(id, newConfig)}\r\n                />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}