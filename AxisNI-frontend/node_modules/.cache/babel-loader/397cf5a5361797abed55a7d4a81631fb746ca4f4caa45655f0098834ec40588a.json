{"ast":null,"code":"// frontend-react/src/components/FileUploader.jsx\nimport React,{useState}from\"react\";import{uploadExcel,uploadCsv}from\"../services/api\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";export default function FileUploader(_ref){let{onDataLoaded}=_ref;const[file,setFile]=useState(null);const[fileType,setFileType]=useState(\"excel\");const[sheet,setSheet]=useState(0);const[range,setRange]=useState(\"A1:C10\");const[loading,setLoading]=useState(false);const[error,setError]=useState(null);const handleFileChange=e=>{setFile(e.target.files[0]);};const handleUpload=async()=>{if(!file)return;setLoading(true);setError(null);try{let response;if(fileType===\"excel\"){response=await uploadExcel(file,sheet,range);}else{response=await uploadCsv(file);}onDataLoaded(response.data);}catch(err){setError(err.message||\"Upload failed\");}finally{setLoading(false);}};return/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:20},children:[/*#__PURE__*/_jsxs(\"select\",{value:fileType,onChange:e=>setFileType(e.target.value),style:{marginRight:10},children:[/*#__PURE__*/_jsx(\"option\",{value:\"excel\",children:\"Excel (.xlsx)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"csv\",children:\"CSV\"})]}),fileType===\"excel\"&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:sheet,min:0,onChange:e=>setSheet(Number(e.target.value)),style:{width:50,marginRight:10}}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:range,onChange:e=>setRange(e.target.value),placeholder:\"Range (e.g. A1:C10)\",style:{marginRight:10}})]}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",onChange:handleFileChange}),/*#__PURE__*/_jsx(\"button\",{onClick:handleUpload,disabled:loading,children:loading?\"Uploading...\":\"Upload\"}),error&&/*#__PURE__*/_jsx(\"div\",{style:{color:\"red\"},children:error})]});}","map":{"version":3,"names":["React","useState","uploadExcel","uploadCsv","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","FileUploader","_ref","onDataLoaded","file","setFile","fileType","setFileType","sheet","setSheet","range","setRange","loading","setLoading","error","setError","handleFileChange","e","target","files","handleUpload","response","data","err","message","style","marginBottom","children","value","onChange","marginRight","type","min","Number","width","placeholder","onClick","disabled","color"],"sources":["C:/Denis_Dev/AxisNI/AxisNI-frontend/src/components/FileUploader.jsx"],"sourcesContent":["// frontend-react/src/components/FileUploader.jsx\r\nimport React, { useState } from \"react\";\r\nimport { uploadExcel, uploadCsv } from \"../services/api\";\r\n\r\nexport default function FileUploader({ onDataLoaded }) {\r\n  const [file, setFile] = useState(null);\r\n  const [fileType, setFileType] = useState(\"excel\");\r\n  const [sheet, setSheet] = useState(0);\r\n  const [range, setRange] = useState(\"A1:C10\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const handleFileChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!file) return;\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      let response;\r\n      if (fileType === \"excel\") {\r\n        response = await uploadExcel(file, sheet, range);\r\n      } else {\r\n        response = await uploadCsv(file);\r\n      }\r\n      onDataLoaded(response.data);\r\n    } catch (err) {\r\n      setError(err.message || \"Upload failed\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ marginBottom: 20 }}>\r\n      <select\r\n        value={fileType}\r\n        onChange={(e) => setFileType(e.target.value)}\r\n        style={{ marginRight: 10 }}\r\n      >\r\n        <option value=\"excel\">Excel (.xlsx)</option>\r\n        <option value=\"csv\">CSV</option>\r\n      </select>\r\n      {fileType === \"excel\" && (\r\n        <>\r\n          <input\r\n            type=\"number\"\r\n            value={sheet}\r\n            min={0}\r\n            onChange={(e) => setSheet(Number(e.target.value))}\r\n            style={{ width: 50, marginRight: 10 }}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            value={range}\r\n            onChange={(e) => setRange(e.target.value)}\r\n            placeholder=\"Range (e.g. A1:C10)\"\r\n            style={{ marginRight: 10 }}\r\n          />\r\n        </>\r\n      )}\r\n      <input type=\"file\" onChange={handleFileChange} />\r\n      <button onClick={handleUpload} disabled={loading}>\r\n        {loading ? \"Uploading...\" : \"Upload\"}\r\n      </button>\r\n      {error && <div style={{ color: \"red\" }}>{error}</div>}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}