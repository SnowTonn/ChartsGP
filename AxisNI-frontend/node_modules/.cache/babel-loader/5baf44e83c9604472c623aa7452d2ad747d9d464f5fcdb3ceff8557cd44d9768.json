{"ast":null,"code":"// frontend-react/src/components/ChartCreator.jsx\nimport React,{useState}from\"react\";import Highcharts from\"highcharts\";import HighchartsReact from\"highcharts-react-official\";import drilldown from\"highcharts/modules/drilldown\";import{saveChart}from\"../services/api\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";drilldown(Highcharts);const chartTypes=[\"column\",\"line\",\"pie\",\"bar\",\"area\",\"scatter\",\"drilldown\"];export default function ChartCreator(_ref){let{data}=_ref;const[chartType,setChartType]=useState(\"column\");const[chartName,setChartName]=useState(\"My Chart\");const[options,setOptions]=useState(null);const[saveStatus,setSaveStatus]=useState(null);// Convert your data (array of objects) to Highcharts options here\nconst buildOptions=()=>{if(!data||data.length===0)return;// Simple: Use first col as category, second col as value\nconst categories=data.map(row=>Object.values(row)[0]);const values=data.map(row=>Number(Object.values(row)[1])||0);const chartOptions={chart:{type:chartType},title:{text:chartName},xAxis:{categories},series:[{name:\"Data\",data:values}],drilldown:{series:[]}};setOptions(chartOptions);};const handleSave=async()=>{if(!options)return;try{setSaveStatus(\"Saving...\");const res=await saveChart(chartName,JSON.stringify(options));setSaveStatus(\"Saved with id: \"+res.data.id);}catch(_unused){setSaveStatus(\"Save failed\");}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Create Chart\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:chartName,onChange:e=>setChartName(e.target.value),placeholder:\"Chart name\",style:{marginRight:10}}),/*#__PURE__*/_jsx(\"select\",{value:chartType,onChange:e=>setChartType(e.target.value),style:{marginRight:10},children:chartTypes.map(t=>/*#__PURE__*/_jsx(\"option\",{value:t,children:t},t))}),/*#__PURE__*/_jsx(\"button\",{onClick:buildOptions,disabled:!data,children:\"Build Chart\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSave,disabled:!options,children:\"Save Chart\"}),saveStatus&&/*#__PURE__*/_jsx(\"p\",{children:saveStatus}),options&&/*#__PURE__*/_jsx(HighchartsReact,{highcharts:Highcharts,options:options})]});}","map":{"version":3,"names":["React","useState","Highcharts","HighchartsReact","drilldown","saveChart","jsx","_jsx","jsxs","_jsxs","chartTypes","ChartCreator","_ref","data","chartType","setChartType","chartName","setChartName","options","setOptions","saveStatus","setSaveStatus","buildOptions","length","categories","map","row","Object","values","Number","chartOptions","chart","type","title","text","xAxis","series","name","handleSave","res","JSON","stringify","id","_unused","children","value","onChange","e","target","placeholder","style","marginRight","t","onClick","disabled","highcharts"],"sources":["C:/Denis_Dev/AxisNI/AxisNI-frontend/src/components/ChartCreator.jsx"],"sourcesContent":["// frontend-react/src/components/ChartCreator.jsx\r\nimport React, { useState } from \"react\";\r\nimport Highcharts from \"highcharts\";\r\nimport HighchartsReact from \"highcharts-react-official\";\r\nimport drilldown from \"highcharts/modules/drilldown\";\r\nimport { saveChart } from \"../services/api\";\r\n\r\ndrilldown(Highcharts);\r\n\r\nconst chartTypes = [\r\n  \"column\",\r\n  \"line\",\r\n  \"pie\",\r\n  \"bar\",\r\n  \"area\",\r\n  \"scatter\",\r\n  \"drilldown\"\r\n];\r\n\r\nexport default function ChartCreator({ data }) {\r\n  const [chartType, setChartType] = useState(\"column\");\r\n  const [chartName, setChartName] = useState(\"My Chart\");\r\n  const [options, setOptions] = useState(null);\r\n  const [saveStatus, setSaveStatus] = useState(null);\r\n\r\n  // Convert your data (array of objects) to Highcharts options here\r\n  const buildOptions = () => {\r\n    if (!data || data.length === 0) return;\r\n\r\n    // Simple: Use first col as category, second col as value\r\n    const categories = data.map((row) => Object.values(row)[0]);\r\n    const values = data.map((row) => Number(Object.values(row)[1]) || 0);\r\n\r\n    const chartOptions = {\r\n      chart: { type: chartType },\r\n      title: { text: chartName },\r\n      xAxis: { categories },\r\n      series: [{ name: \"Data\", data: values }],\r\n      drilldown: { series: [] },\r\n    };\r\n\r\n    setOptions(chartOptions);\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    if (!options) return;\r\n    try {\r\n      setSaveStatus(\"Saving...\");\r\n      const res = await saveChart(chartName, JSON.stringify(options));\r\n      setSaveStatus(\"Saved with id: \" + res.data.id);\r\n    } catch {\r\n      setSaveStatus(\"Save failed\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Create Chart</h3>\r\n      <input\r\n        type=\"text\"\r\n        value={chartName}\r\n        onChange={(e) => setChartName(e.target.value)}\r\n        placeholder=\"Chart name\"\r\n        style={{ marginRight: 10 }}\r\n      />\r\n      <select\r\n        value={chartType}\r\n        onChange={(e) => setChartType(e.target.value)}\r\n        style={{ marginRight: 10 }}\r\n      >\r\n        {chartTypes.map((t) => (\r\n          <option key={t} value={t}>\r\n            {t}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <button onClick={buildOptions} disabled={!data}>\r\n        Build Chart\r\n      </button>\r\n      <button onClick={handleSave} disabled={!options}>\r\n        Save Chart\r\n      </button>\r\n      {saveStatus && <p>{saveStatus}</p>}\r\n      {options && <HighchartsReact highcharts={Highcharts} options={options} />}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}