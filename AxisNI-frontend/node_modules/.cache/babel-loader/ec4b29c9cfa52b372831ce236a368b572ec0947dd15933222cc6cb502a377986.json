{"ast":null,"code":"import axios from\"axios\";const API_URL=\"http://localhost:8080/api\";// Upload Excel file with sheet index and range\nexport const uploadExcel=async(file,sheet,range)=>{const formData=new FormData();formData.append(\"file\",file);formData.append(\"sheet\",sheet);formData.append(\"range\",range);try{const res=await axios.post(\"\".concat(API_URL,\"/upload/excel\"),formData,{headers:{\"Content-Type\":\"multipart/form-data\"}});console.log(\"Excel upload response:\",res);return res;}catch(err){console.error(\"Excel upload error:\",err);throw err;}};// Upload CSV file\nexport const uploadCsv=async file=>{const formData=new FormData();formData.append(\"file\",file);try{const res=await axios.post(\"\".concat(API_URL,\"/upload/csv\"),formData,{headers:{\"Content-Type\":\"multipart/form-data\"}});console.log(\"CSV upload response:\",res);return res;}catch(err){console.error(\"CSV upload error:\",err);throw err;}};// Get sheet names from uploaded Excel file\nexport const getSheetNames=async file=>{const formData=new FormData();formData.append(\"file\",file);try{const res=await axios.post(\"\".concat(API_URL,\"/upload/sheets\"),formData,{headers:{\"Content-Type\":\"multipart/form-data\"}});console.log(\"Get sheet names response:\",res);return res;}catch(err){console.error(\"Get sheet names error:\",err);throw err;}};// Save chart data (name + JSON config)\nexport const saveChart=async(name,configJson)=>{try{const res=await axios.post(\"\".concat(API_URL,\"/chart/save\"),{name,configJson});console.log(\"Save chart response:\",res);return res;}catch(err){console.error(\"Save chart error:\",err);throw err;}};// Get all saved charts\nexport const getCharts=async()=>{try{const res=await axios.get(\"\".concat(API_URL,\"/chart/all\"));console.log(\"Get charts response:\",res);return res;}catch(err){console.error(\"Get charts error:\",err);throw err;}};","map":{"version":3,"names":["axios","API_URL","uploadExcel","file","sheet","range","formData","FormData","append","res","post","concat","headers","console","log","err","error","uploadCsv","getSheetNames","saveChart","name","configJson","getCharts","get"],"sources":["C:/Denis_Dev/AxisNI/AxisNI-frontend/src/services/api.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_URL = \"http://localhost:8080/api\";\r\n\r\n// Upload Excel file with sheet index and range\r\nexport const uploadExcel = async (file, sheet, range) => {\r\n  const formData = new FormData();\r\n  formData.append(\"file\", file);\r\n  formData.append(\"sheet\", sheet);\r\n  formData.append(\"range\", range);\r\n\r\n  try {\r\n    const res = await axios.post(`${API_URL}/upload/excel`, formData, {\r\n      headers: { \"Content-Type\": \"multipart/form-data\" },\r\n    });\r\n    console.log(\"Excel upload response:\", res);\r\n    return res;\r\n  } catch (err) {\r\n    console.error(\"Excel upload error:\", err);\r\n    throw err;\r\n  }\r\n};\r\n\r\n// Upload CSV file\r\nexport const uploadCsv = async (file) => {\r\n  const formData = new FormData();\r\n  formData.append(\"file\", file);\r\n\r\n  try {\r\n    const res = await axios.post(`${API_URL}/upload/csv`, formData, {\r\n      headers: { \"Content-Type\": \"multipart/form-data\" },\r\n    });\r\n    console.log(\"CSV upload response:\", res);\r\n    return res;\r\n  } catch (err) {\r\n    console.error(\"CSV upload error:\", err);\r\n    throw err;\r\n  }\r\n};\r\n\r\n// Get sheet names from uploaded Excel file\r\nexport const getSheetNames = async (file) => {\r\n  const formData = new FormData();\r\n  formData.append(\"file\", file);\r\n\r\n  try {\r\n    const res = await axios.post(`${API_URL}/upload/sheets`, formData, {\r\n      headers: { \"Content-Type\": \"multipart/form-data\" },\r\n    });\r\n    console.log(\"Get sheet names response:\", res);\r\n    return res;\r\n  } catch (err) {\r\n    console.error(\"Get sheet names error:\", err);\r\n    throw err;\r\n  }\r\n};\r\n\r\n// Save chart data (name + JSON config)\r\nexport const saveChart = async (name, configJson) => {\r\n  try {\r\n    const res = await axios.post(`${API_URL}/chart/save`, { name, configJson });\r\n    console.log(\"Save chart response:\", res);\r\n    return res;\r\n  } catch (err) {\r\n    console.error(\"Save chart error:\", err);\r\n    throw err;\r\n  }\r\n};\r\n\r\n// Get all saved charts\r\nexport const getCharts = async () => {\r\n  try {\r\n    const res = await axios.get(`${API_URL}/chart/all`);\r\n    console.log(\"Get charts response:\", res);\r\n    return res;\r\n  } catch (err) {\r\n    console.error(\"Get charts error:\", err);\r\n    throw err;\r\n  }\r\n};\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,KAAM,CAAAC,OAAO,CAAG,2BAA2B,CAE3C;AACA,MAAO,MAAM,CAAAC,WAAW,CAAG,KAAAA,CAAOC,IAAI,CAAEC,KAAK,CAAEC,KAAK,GAAK,CACvD,KAAM,CAAAC,QAAQ,CAAG,GAAI,CAAAC,QAAQ,CAAC,CAAC,CAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,CAAEL,IAAI,CAAC,CAC7BG,QAAQ,CAACE,MAAM,CAAC,OAAO,CAAEJ,KAAK,CAAC,CAC/BE,QAAQ,CAACE,MAAM,CAAC,OAAO,CAAEH,KAAK,CAAC,CAE/B,GAAI,CACF,KAAM,CAAAI,GAAG,CAAG,KAAM,CAAAT,KAAK,CAACU,IAAI,IAAAC,MAAA,CAAIV,OAAO,kBAAiBK,QAAQ,CAAE,CAChEM,OAAO,CAAE,CAAE,cAAc,CAAE,qBAAsB,CACnD,CAAC,CAAC,CACFC,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAEL,GAAG,CAAC,CAC1C,MAAO,CAAAA,GAAG,CACZ,CAAE,MAAOM,GAAG,CAAE,CACZF,OAAO,CAACG,KAAK,CAAC,qBAAqB,CAAED,GAAG,CAAC,CACzC,KAAM,CAAAA,GAAG,CACX,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAE,SAAS,CAAG,KAAO,CAAAd,IAAI,EAAK,CACvC,KAAM,CAAAG,QAAQ,CAAG,GAAI,CAAAC,QAAQ,CAAC,CAAC,CAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,CAAEL,IAAI,CAAC,CAE7B,GAAI,CACF,KAAM,CAAAM,GAAG,CAAG,KAAM,CAAAT,KAAK,CAACU,IAAI,IAAAC,MAAA,CAAIV,OAAO,gBAAeK,QAAQ,CAAE,CAC9DM,OAAO,CAAE,CAAE,cAAc,CAAE,qBAAsB,CACnD,CAAC,CAAC,CACFC,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAEL,GAAG,CAAC,CACxC,MAAO,CAAAA,GAAG,CACZ,CAAE,MAAOM,GAAG,CAAE,CACZF,OAAO,CAACG,KAAK,CAAC,mBAAmB,CAAED,GAAG,CAAC,CACvC,KAAM,CAAAA,GAAG,CACX,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAG,aAAa,CAAG,KAAO,CAAAf,IAAI,EAAK,CAC3C,KAAM,CAAAG,QAAQ,CAAG,GAAI,CAAAC,QAAQ,CAAC,CAAC,CAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,CAAEL,IAAI,CAAC,CAE7B,GAAI,CACF,KAAM,CAAAM,GAAG,CAAG,KAAM,CAAAT,KAAK,CAACU,IAAI,IAAAC,MAAA,CAAIV,OAAO,mBAAkBK,QAAQ,CAAE,CACjEM,OAAO,CAAE,CAAE,cAAc,CAAE,qBAAsB,CACnD,CAAC,CAAC,CACFC,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAEL,GAAG,CAAC,CAC7C,MAAO,CAAAA,GAAG,CACZ,CAAE,MAAOM,GAAG,CAAE,CACZF,OAAO,CAACG,KAAK,CAAC,wBAAwB,CAAED,GAAG,CAAC,CAC5C,KAAM,CAAAA,GAAG,CACX,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAI,SAAS,CAAG,KAAAA,CAAOC,IAAI,CAAEC,UAAU,GAAK,CACnD,GAAI,CACF,KAAM,CAAAZ,GAAG,CAAG,KAAM,CAAAT,KAAK,CAACU,IAAI,IAAAC,MAAA,CAAIV,OAAO,gBAAe,CAAEmB,IAAI,CAAEC,UAAW,CAAC,CAAC,CAC3ER,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAEL,GAAG,CAAC,CACxC,MAAO,CAAAA,GAAG,CACZ,CAAE,MAAOM,GAAG,CAAE,CACZF,OAAO,CAACG,KAAK,CAAC,mBAAmB,CAAED,GAAG,CAAC,CACvC,KAAM,CAAAA,GAAG,CACX,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAO,SAAS,CAAG,KAAAA,CAAA,GAAY,CACnC,GAAI,CACF,KAAM,CAAAb,GAAG,CAAG,KAAM,CAAAT,KAAK,CAACuB,GAAG,IAAAZ,MAAA,CAAIV,OAAO,cAAY,CAAC,CACnDY,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAEL,GAAG,CAAC,CACxC,MAAO,CAAAA,GAAG,CACZ,CAAE,MAAOM,GAAG,CAAE,CACZF,OAAO,CAACG,KAAK,CAAC,mBAAmB,CAAED,GAAG,CAAC,CACvC,KAAM,CAAAA,GAAG,CACX,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}