{"ast":null,"code":"var _jsxFileName = \"C:\\\\Denis_Dev\\\\AxisNI\\\\AxisNI-frontend\\\\src\\\\pages\\\\DashboardPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport Highcharts from \"../components/utils/highcharts-config\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mainData = [{\n  Year: \"2010\",\n  TotalBudget: 11804.2,\n  TotalResource: 10316.1,\n  TotalCapital: 1488.1\n}, {\n  Year: \"2011\",\n  TotalBudget: 11520.4,\n  TotalResource: 10329.1,\n  TotalCapital: 1191.3\n}, {\n  Year: \"2012\",\n  TotalBudget: 11525.9,\n  TotalResource: 10353.4,\n  TotalCapital: 1172.5\n}, {\n  Year: \"2013\",\n  TotalBudget: 11548.7,\n  TotalResource: 10431.9,\n  TotalCapital: 1116.8\n}, {\n  Year: \"2014\",\n  TotalBudget: 11919.6,\n  TotalResource: 10519.9,\n  TotalCapital: 1399.7\n}, {\n  Year: \"2015\",\n  TotalBudget: 11293.8,\n  TotalResource: 10176.1,\n  TotalCapital: 1117.7\n}, {\n  Year: \"2016\",\n  TotalBudget: 11614,\n  TotalResource: 10398,\n  TotalCapital: 1216\n}, {\n  Year: \"2017\",\n  TotalBudget: 11845.1,\n  TotalResource: 10612.8,\n  TotalCapital: 1232.3\n}, {\n  Year: \"2018\",\n  TotalBudget: 12204.7,\n  TotalResource: 10780.4,\n  TotalCapital: 1424.3\n}, {\n  Year: \"2019\",\n  TotalBudget: 12741.6,\n  TotalResource: 11351.5,\n  TotalCapital: 1390.1\n}, {\n  Year: \"2020\",\n  TotalBudget: 13746.4,\n  TotalResource: 12196.9,\n  TotalCapital: 1549.5\n}, {\n  Year: \"2021\",\n  TotalBudget: 14782.5,\n  TotalResource: 13001.5,\n  TotalCapital: 1781\n}, {\n  Year: \"2022\",\n  TotalBudget: 16323.341,\n  TotalResource: 14269.097,\n  TotalCapital: 2054.244\n}, {\n  Year: \"2023\",\n  TotalBudget: 16451.684,\n  TotalResource: 14211.967,\n  TotalCapital: 2239.717\n}, {\n  Year: \"2024\",\n  TotalBudget: 17255.6,\n  TotalResource: 15168.2,\n  TotalCapital: 2087.4\n}, {\n  Year: \"2025\",\n  TotalBudget: 19085,\n  TotalResource: 16639.4,\n  TotalCapital: 2445.6\n}];\nconst drilldownData = {\n  // ... your drilldown data here (same as you provided)\n  // truncated here for brevity; use the full data in your actual code\n};\nconst COLORS = {\n  total: \"#2a9d8f\",\n  resource: \"#e9c46a\",\n  capital: \"#f4a261\"\n};\nexport default function CoolDashboard() {\n  _s();\n  const [selectedView, setSelectedView] = useState(\"TotalBudget\");\n  const [drilldownYear, setDrilldownYear] = useState(null);\n  const categories = mainData.map(d => d.Year);\n\n  // Prepare series for total budget line chart\n  const totalBudgetSeries = mainData.map(d => ({\n    y: d.TotalBudget,\n    drilldown: d.Year\n  }));\n\n  // Prepare drilldown series with grouped bars for resource & capital side by side\n  const drilldownSeries = [];\n  Object.entries(drilldownData).forEach(([year, data]) => {\n    drilldownSeries.push({\n      id: year,\n      name: \"Resource\",\n      type: \"column\",\n      data: data.categories.map((cat, i) => [cat, data.resource[i]]),\n      color: COLORS.resource,\n      showInLegend: true\n    });\n    drilldownSeries.push({\n      id: year,\n      name: \"Capital\",\n      type: \"column\",\n      data: data.categories.map((cat, i) => [cat, data.capital[i]]),\n      color: COLORS.capital,\n      showInLegend: true\n    });\n  });\n\n  // Chart options\n  const options = {\n    chart: {\n      height: 600,\n      type: selectedView === \"TotalBudget\" ? \"line\" : \"column\",\n      animation: {\n        duration: 800\n      }\n    },\n    title: {\n      text: selectedView === \"TotalBudget\" ? \"Total Budget Over Years (£M)\" : `Budget Breakdown for ${drilldownYear || \"Year\"} (£M)`,\n      style: {\n        fontWeight: \"bold\",\n        fontSize: \"20px\"\n      }\n    },\n    xAxis: {\n      categories: selectedView === \"TotalBudget\" ? categories : drilldownYear ? drilldownData[drilldownYear].categories : [],\n      title: {\n        text: selectedView === \"TotalBudget\" ? \"Year\" : \"Department\"\n      },\n      crosshair: true\n    },\n    yAxis: {\n      min: 0,\n      title: {\n        text: \"Budget (£M)\"\n      },\n      labels: {\n        formatter() {\n          return `£${this.value}M`;\n        }\n      }\n    },\n    tooltip: {\n      shared: true,\n      valuePrefix: \"£\",\n      valueSuffix: \"M\"\n    },\n    plotOptions: {\n      series: {\n        cursor: \"pointer\",\n        marker: {\n          enabled: selectedView === \"TotalBudget\"\n        },\n        point: {\n          events: {\n            click: function () {\n              if (selectedView === \"TotalBudget\") {\n                setDrilldownYear(this.category);\n                setSelectedView(\"Breakdown\");\n              }\n            }\n          }\n        }\n      },\n      column: {\n        grouping: true,\n        shadow: false,\n        borderWidth: 0,\n        dataLabels: {\n          enabled: true,\n          format: \"£{y}M\",\n          style: {\n            fontWeight: \"bold\"\n          }\n        }\n      }\n    },\n    legend: {\n      enabled: selectedView !== \"TotalBudget\",\n      itemStyle: {\n        fontWeight: \"bold\"\n      }\n    },\n    series: selectedView === \"TotalBudget\" ? [{\n      name: \"Total Budget\",\n      data: totalBudgetSeries,\n      color: COLORS.total,\n      marker: {\n        radius: 6\n      }\n    }] : drilldownYear ? drilldownSeries.filter(s => s.id === drilldownYear) : [],\n    credits: {\n      enabled: false\n    }\n  };\n\n  // Summary KPIs\n  const latestData = mainData[mainData.length - 1];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: 1100,\n      margin: \"auto\",\n      padding: 20,\n      fontFamily: \"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: \"center\",\n        marginBottom: 20,\n        color: COLORS.total\n      },\n      children: \"Budget Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-around\",\n        marginBottom: 30,\n        gap: 15,\n        flexWrap: \"wrap\"\n      },\n      children: [{\n        label: \"Total Budget\",\n        value: latestData.TotalBudget,\n        color: COLORS.total\n      }, {\n        label: \"Resource Budget\",\n        value: latestData.TotalResource,\n        color: COLORS.resource\n      }, {\n        label: \"Capital Budget\",\n        value: latestData.TotalCapital,\n        color: COLORS.capital\n      }].map(({\n        label,\n        value,\n        color\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: \"1 1 250px\",\n          background: color,\n          color: \"white\",\n          borderRadius: 8,\n          padding: 20,\n          boxShadow: \"0 4px 15px rgba(0,0,0,0.15)\",\n          cursor: label === \"Total Budget\" ? \"default\" : \"pointer\",\n          transition: \"transform 0.3s\",\n          textAlign: \"center\"\n        },\n        onClick: () => {\n          if (label === \"Total Budget\") {\n            setSelectedView(\"TotalBudget\");\n            setDrilldownYear(null);\n          } else {\n            setSelectedView(\"Breakdown\");\n            setDrilldownYear(\"2025\"); // default drilldown year or you can make dynamic\n          }\n        },\n        onMouseEnter: e => e.currentTarget.style.transform = \"scale(1.05)\",\n        onMouseLeave: e => e.currentTarget.style.transform = \"scale(1)\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            marginBottom: 10\n          },\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontSize: 28,\n            fontWeight: \"bold\",\n            margin: 0\n          },\n          children: [\"\\xA3\", value.toLocaleString(), \"M\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this)]\n      }, label, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HighchartsReact, {\n      highcharts: Highcharts,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this), selectedView === \"Breakdown\" && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setSelectedView(\"TotalBudget\"),\n      style: {\n        marginTop: 20,\n        padding: \"10px 20px\",\n        backgroundColor: COLORS.total,\n        color: \"white\",\n        border: \"none\",\n        borderRadius: 5,\n        cursor: \"pointer\",\n        fontWeight: \"bold\",\n        fontSize: 16\n      },\n      children: \"Back to Overview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 40,\n        textAlign: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/upload\",\n        style: {\n          display: \"inline-block\",\n          padding: \"12px 28px\",\n          fontSize: 18,\n          backgroundColor: COLORS.total,\n          color: \"white\",\n          borderRadius: 8,\n          textDecoration: \"none\",\n          boxShadow: \"0 5px 15px rgba(42, 157, 143, 0.4)\",\n          transition: \"background-color 0.3s\"\n        },\n        onMouseEnter: e => e.currentTarget.style.backgroundColor = \"#23877c\",\n        onMouseLeave: e => e.currentTarget.style.backgroundColor = COLORS.total,\n        children: \"Upload Your Data & Create Charts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n}\n_s(CoolDashboard, \"rv86lJ+UNcdxzQ8a4v74E1Q/ooM=\");\n_c = CoolDashboard;\nvar _c;\n$RefreshReg$(_c, \"CoolDashboard\");","map":{"version":3,"names":["React","useState","HighchartsReact","Highcharts","Link","jsxDEV","_jsxDEV","mainData","Year","TotalBudget","TotalResource","TotalCapital","drilldownData","COLORS","total","resource","capital","CoolDashboard","_s","selectedView","setSelectedView","drilldownYear","setDrilldownYear","categories","map","d","totalBudgetSeries","y","drilldown","drilldownSeries","Object","entries","forEach","year","data","push","id","name","type","cat","i","color","showInLegend","options","chart","height","animation","duration","title","text","style","fontWeight","fontSize","xAxis","crosshair","yAxis","min","labels","formatter","value","tooltip","shared","valuePrefix","valueSuffix","plotOptions","series","cursor","marker","enabled","point","events","click","category","column","grouping","shadow","borderWidth","dataLabels","format","legend","itemStyle","radius","filter","s","credits","latestData","length","maxWidth","margin","padding","fontFamily","children","textAlign","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","gap","flexWrap","label","flex","background","borderRadius","boxShadow","transition","onClick","onMouseEnter","e","currentTarget","transform","onMouseLeave","toLocaleString","highcharts","marginTop","backgroundColor","border","to","textDecoration","_c","$RefreshReg$"],"sources":["C:/Denis_Dev/AxisNI/AxisNI-frontend/src/pages/DashboardPage.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport HighchartsReact from \"highcharts-react-official\";\r\nimport Highcharts from \"../components/utils/highcharts-config\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst mainData = [\r\n  { Year: \"2010\", TotalBudget: 11804.2, TotalResource: 10316.1, TotalCapital: 1488.1 },\r\n  { Year: \"2011\", TotalBudget: 11520.4, TotalResource: 10329.1, TotalCapital: 1191.3 },\r\n  { Year: \"2012\", TotalBudget: 11525.9, TotalResource: 10353.4, TotalCapital: 1172.5 },\r\n  { Year: \"2013\", TotalBudget: 11548.7, TotalResource: 10431.9, TotalCapital: 1116.8 },\r\n  { Year: \"2014\", TotalBudget: 11919.6, TotalResource: 10519.9, TotalCapital: 1399.7 },\r\n  { Year: \"2015\", TotalBudget: 11293.8, TotalResource: 10176.1, TotalCapital: 1117.7 },\r\n  { Year: \"2016\", TotalBudget: 11614, TotalResource: 10398, TotalCapital: 1216 },\r\n  { Year: \"2017\", TotalBudget: 11845.1, TotalResource: 10612.8, TotalCapital: 1232.3 },\r\n  { Year: \"2018\", TotalBudget: 12204.7, TotalResource: 10780.4, TotalCapital: 1424.3 },\r\n  { Year: \"2019\", TotalBudget: 12741.6, TotalResource: 11351.5, TotalCapital: 1390.1 },\r\n  { Year: \"2020\", TotalBudget: 13746.4, TotalResource: 12196.9, TotalCapital: 1549.5 },\r\n  { Year: \"2021\", TotalBudget: 14782.5, TotalResource: 13001.5, TotalCapital: 1781 },\r\n  { Year: \"2022\", TotalBudget: 16323.341, TotalResource: 14269.097, TotalCapital: 2054.244 },\r\n  { Year: \"2023\", TotalBudget: 16451.684, TotalResource: 14211.967, TotalCapital: 2239.717 },\r\n  { Year: \"2024\", TotalBudget: 17255.6, TotalResource: 15168.2, TotalCapital: 2087.4 },\r\n  { Year: \"2025\", TotalBudget: 19085, TotalResource: 16639.4, TotalCapital: 2445.6 },\r\n];\r\n\r\nconst drilldownData = {\r\n  // ... your drilldown data here (same as you provided)\r\n  // truncated here for brevity; use the full data in your actual code\r\n};\r\n\r\nconst COLORS = {\r\n  total: \"#2a9d8f\",\r\n  resource: \"#e9c46a\",\r\n  capital: \"#f4a261\",\r\n};\r\n\r\nexport default function CoolDashboard() {\r\n  const [selectedView, setSelectedView] = useState(\"TotalBudget\");\r\n  const [drilldownYear, setDrilldownYear] = useState(null);\r\n\r\n  const categories = mainData.map((d) => d.Year);\r\n\r\n  // Prepare series for total budget line chart\r\n  const totalBudgetSeries = mainData.map((d) => ({\r\n    y: d.TotalBudget,\r\n    drilldown: d.Year,\r\n  }));\r\n\r\n  // Prepare drilldown series with grouped bars for resource & capital side by side\r\n  const drilldownSeries = [];\r\n\r\n  Object.entries(drilldownData).forEach(([year, data]) => {\r\n    drilldownSeries.push({\r\n      id: year,\r\n      name: \"Resource\",\r\n      type: \"column\",\r\n      data: data.categories.map((cat, i) => [cat, data.resource[i]]),\r\n      color: COLORS.resource,\r\n      showInLegend: true,\r\n    });\r\n    drilldownSeries.push({\r\n      id: year,\r\n      name: \"Capital\",\r\n      type: \"column\",\r\n      data: data.categories.map((cat, i) => [cat, data.capital[i]]),\r\n      color: COLORS.capital,\r\n      showInLegend: true,\r\n    });\r\n  });\r\n\r\n  // Chart options\r\n  const options = {\r\n    chart: {\r\n      height: 600,\r\n      type: selectedView === \"TotalBudget\" ? \"line\" : \"column\",\r\n      animation: { duration: 800 },\r\n    },\r\n    title: {\r\n      text: selectedView === \"TotalBudget\" ? \"Total Budget Over Years (£M)\" : `Budget Breakdown for ${drilldownYear || \"Year\"} (£M)`,\r\n      style: { fontWeight: \"bold\", fontSize: \"20px\" },\r\n    },\r\n    xAxis: {\r\n      categories: selectedView === \"TotalBudget\" ? categories : drilldownYear ? drilldownData[drilldownYear].categories : [],\r\n      title: { text: selectedView === \"TotalBudget\" ? \"Year\" : \"Department\" },\r\n      crosshair: true,\r\n    },\r\n    yAxis: {\r\n      min: 0,\r\n      title: { text: \"Budget (£M)\" },\r\n      labels: {\r\n        formatter() {\r\n          return `£${this.value}M`;\r\n        },\r\n      },\r\n    },\r\n    tooltip: {\r\n      shared: true,\r\n      valuePrefix: \"£\",\r\n      valueSuffix: \"M\",\r\n    },\r\n    plotOptions: {\r\n      series: {\r\n        cursor: \"pointer\",\r\n        marker: { enabled: selectedView === \"TotalBudget\" },\r\n        point: {\r\n          events: {\r\n            click: function () {\r\n              if (selectedView === \"TotalBudget\") {\r\n                setDrilldownYear(this.category);\r\n                setSelectedView(\"Breakdown\");\r\n              }\r\n            },\r\n          },\r\n        },\r\n      },\r\n      column: {\r\n        grouping: true,\r\n        shadow: false,\r\n        borderWidth: 0,\r\n        dataLabels: {\r\n          enabled: true,\r\n          format: \"£{y}M\",\r\n          style: { fontWeight: \"bold\" },\r\n        },\r\n      },\r\n    },\r\n    legend: {\r\n      enabled: selectedView !== \"TotalBudget\",\r\n      itemStyle: { fontWeight: \"bold\" },\r\n    },\r\n    series:\r\n      selectedView === \"TotalBudget\"\r\n        ? [\r\n            {\r\n              name: \"Total Budget\",\r\n              data: totalBudgetSeries,\r\n              color: COLORS.total,\r\n              marker: { radius: 6 },\r\n            },\r\n          ]\r\n        : drilldownYear\r\n        ? drilldownSeries.filter((s) => s.id === drilldownYear)\r\n        : [],\r\n    credits: { enabled: false },\r\n  };\r\n\r\n  // Summary KPIs\r\n  const latestData = mainData[mainData.length - 1];\r\n\r\n  return (\r\n    <div style={{ maxWidth: 1100, margin: \"auto\", padding: 20, fontFamily: \"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\" }}>\r\n      <h1 style={{ textAlign: \"center\", marginBottom: 20, color: COLORS.total }}>Budget Dashboard</h1>\r\n\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-around\",\r\n          marginBottom: 30,\r\n          gap: 15,\r\n          flexWrap: \"wrap\",\r\n        }}\r\n      >\r\n        {[\r\n          { label: \"Total Budget\", value: latestData.TotalBudget, color: COLORS.total },\r\n          { label: \"Resource Budget\", value: latestData.TotalResource, color: COLORS.resource },\r\n          { label: \"Capital Budget\", value: latestData.TotalCapital, color: COLORS.capital },\r\n        ].map(({ label, value, color }) => (\r\n          <div\r\n            key={label}\r\n            style={{\r\n              flex: \"1 1 250px\",\r\n              background: color,\r\n              color: \"white\",\r\n              borderRadius: 8,\r\n              padding: 20,\r\n              boxShadow: \"0 4px 15px rgba(0,0,0,0.15)\",\r\n              cursor: label === \"Total Budget\" ? \"default\" : \"pointer\",\r\n              transition: \"transform 0.3s\",\r\n              textAlign: \"center\",\r\n            }}\r\n            onClick={() => {\r\n              if (label === \"Total Budget\") {\r\n                setSelectedView(\"TotalBudget\");\r\n                setDrilldownYear(null);\r\n              } else {\r\n                setSelectedView(\"Breakdown\");\r\n                setDrilldownYear(\"2025\"); // default drilldown year or you can make dynamic\r\n              }\r\n            }}\r\n            onMouseEnter={(e) => (e.currentTarget.style.transform = \"scale(1.05)\")}\r\n            onMouseLeave={(e) => (e.currentTarget.style.transform = \"scale(1)\")}\r\n          >\r\n            <h3 style={{ marginBottom: 10 }}>{label}</h3>\r\n            <p style={{ fontSize: 28, fontWeight: \"bold\", margin: 0 }}>£{value.toLocaleString()}M</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <HighchartsReact highcharts={Highcharts} options={options} />\r\n\r\n      {selectedView === \"Breakdown\" && (\r\n        <button\r\n          onClick={() => setSelectedView(\"TotalBudget\")}\r\n          style={{\r\n            marginTop: 20,\r\n            padding: \"10px 20px\",\r\n            backgroundColor: COLORS.total,\r\n            color: \"white\",\r\n            border: \"none\",\r\n            borderRadius: 5,\r\n            cursor: \"pointer\",\r\n            fontWeight: \"bold\",\r\n            fontSize: 16,\r\n          }}\r\n        >\r\n          Back to Overview\r\n        </button>\r\n      )}\r\n\r\n      <div style={{ marginTop: 40, textAlign: \"center\" }}>\r\n        <Link\r\n          to=\"/upload\"\r\n          style={{\r\n            display: \"inline-block\",\r\n            padding: \"12px 28px\",\r\n            fontSize: 18,\r\n            backgroundColor: COLORS.total,\r\n            color: \"white\",\r\n            borderRadius: 8,\r\n            textDecoration: \"none\",\r\n            boxShadow: \"0 5px 15px rgba(42, 157, 143, 0.4)\",\r\n            transition: \"background-color 0.3s\",\r\n          }}\r\n          onMouseEnter={(e) => (e.currentTarget.style.backgroundColor = \"#23877c\")}\r\n          onMouseLeave={(e) => (e.currentTarget.style.backgroundColor = COLORS.total)}\r\n        >\r\n          Upload Your Data & Create Charts\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}