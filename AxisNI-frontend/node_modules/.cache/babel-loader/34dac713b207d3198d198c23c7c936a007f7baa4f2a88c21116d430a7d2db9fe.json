{"ast":null,"code":"var _jsxFileName = \"C:\\\\Denis_Dev\\\\AxisNI\\\\AxisNI-frontend\\\\src\\\\components\\\\ChartCreator.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport drilldown from \"highcharts/modules/drilldown\"; // ✅ correct import\nimport { saveChart } from \"../services/api\"; // ✅ ensure this is present\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndrilldown(Highcharts); // ✅ correct usage\n\nconst chartTypes = [\"column\", \"line\", \"pie\", \"bar\", \"area\", \"scatter\"];\nexport default function ChartCreator({\n  data\n}) {\n  _s();\n  const [chartType, setChartType] = useState(\"column\");\n  const [chartName, setChartName] = useState(\"My Chart\");\n  const [options, setOptions] = useState(null);\n  const [saveStatus, setSaveStatus] = useState(null);\n\n  // Example drilldown data for demonstration\n  const drilldownSeries = [{\n    id: \"Apples\",\n    data: [[\"Green Apples\", 4], [\"Red Apples\", 6]]\n  }, {\n    id: \"Oranges\",\n    data: [[\"Navel Oranges\", 3], [\"Blood Oranges\", 2]]\n  }];\n\n  // Build chart options with optional drilldown for column charts\n  const buildOptions = () => {\n    if (!data || data.length === 0) return;\n\n    // Extract categories and values from data\n    const categories = data.map(row => Object.values(row)[0]);\n    const values = data.map(row => Number(Object.values(row)[1]) || 0);\n\n    // For drilldown demo, mark first two categories with drilldown ids\n    const seriesData = chartType === \"column\" ? categories.map((cat, i) => {\n      return {\n        name: cat,\n        y: values[i],\n        drilldown: i < 2 ? cat : null // only first 2 have drilldown\n      };\n    }) : values;\n    const baseOptions = {\n      chart: {\n        type: chartType\n      },\n      title: {\n        text: chartName\n      },\n      xAxis: {\n        categories: chartType !== \"pie\" ? categories : undefined,\n        type: chartType === \"column\" ? \"category\" : undefined\n      },\n      series: chartType === \"pie\" ? [{\n        name: \"Data\",\n        colorByPoint: true,\n        data: categories.map((cat, i) => ({\n          name: cat,\n          y: values[i]\n        }))\n      }] : [{\n        name: \"Data\",\n        data: seriesData\n      }],\n      drilldown: chartType === \"column\" ? {\n        series: drilldownSeries\n      } : undefined\n    };\n    setOptions(baseOptions);\n    setSaveStatus(null);\n  };\n\n  // Placeholder save function\n  const handleSave = () => {\n    // You can add your API call here to save the chart config\n    setSaveStatus(\"Save function not implemented yet.\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Create Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: chartName,\n      onChange: e => setChartName(e.target.value),\n      placeholder: \"Chart name\",\n      style: {\n        marginRight: 10\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: chartType,\n      onChange: e => setChartType(e.target.value),\n      style: {\n        marginRight: 10\n      },\n      children: chartTypes.map(t => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: t,\n        children: t\n      }, t, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: buildOptions,\n      disabled: !data || data.length === 0,\n      style: {\n        marginRight: 10\n      },\n      children: \"Build Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSave,\n      disabled: !options,\n      children: \"Save Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), saveStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: saveStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 22\n    }, this), options && /*#__PURE__*/_jsxDEV(HighchartsReact, {\n      highcharts: Highcharts,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n_s(ChartCreator, \"2FdS2r7vF6yQGfYknhakmxtTtCk=\");\n_c = ChartCreator;\nvar _c;\n$RefreshReg$(_c, \"ChartCreator\");","map":{"version":3,"names":["React","useState","Highcharts","HighchartsReact","drilldown","saveChart","jsxDEV","_jsxDEV","chartTypes","ChartCreator","data","_s","chartType","setChartType","chartName","setChartName","options","setOptions","saveStatus","setSaveStatus","drilldownSeries","id","buildOptions","length","categories","map","row","Object","values","Number","seriesData","cat","i","name","y","baseOptions","chart","type","title","text","xAxis","undefined","series","colorByPoint","handleSave","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","style","marginRight","t","onClick","disabled","highcharts","_c","$RefreshReg$"],"sources":["C:/Denis_Dev/AxisNI/AxisNI-frontend/src/components/ChartCreator.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Highcharts from \"highcharts\";\r\nimport HighchartsReact from \"highcharts-react-official\";\r\nimport drilldown from \"highcharts/modules/drilldown\"; // ✅ correct import\r\nimport { saveChart } from \"../services/api\"; // ✅ ensure this is present\r\n\r\ndrilldown(Highcharts); // ✅ correct usage\r\n\r\n\r\nconst chartTypes = [\"column\", \"line\", \"pie\", \"bar\", \"area\", \"scatter\"];\r\n\r\nexport default function ChartCreator({ data }) {\r\n  const [chartType, setChartType] = useState(\"column\");\r\n  const [chartName, setChartName] = useState(\"My Chart\");\r\n  const [options, setOptions] = useState(null);\r\n  const [saveStatus, setSaveStatus] = useState(null);\r\n\r\n  // Example drilldown data for demonstration\r\n  const drilldownSeries = [\r\n    {\r\n      id: \"Apples\",\r\n      data: [\r\n        [\"Green Apples\", 4],\r\n        [\"Red Apples\", 6],\r\n      ],\r\n    },\r\n    {\r\n      id: \"Oranges\",\r\n      data: [\r\n        [\"Navel Oranges\", 3],\r\n        [\"Blood Oranges\", 2],\r\n      ],\r\n    },\r\n  ];\r\n\r\n  // Build chart options with optional drilldown for column charts\r\n  const buildOptions = () => {\r\n    if (!data || data.length === 0) return;\r\n\r\n    // Extract categories and values from data\r\n    const categories = data.map((row) => Object.values(row)[0]);\r\n    const values = data.map((row) => Number(Object.values(row)[1]) || 0);\r\n\r\n    // For drilldown demo, mark first two categories with drilldown ids\r\n    const seriesData =\r\n      chartType === \"column\"\r\n        ? categories.map((cat, i) => {\r\n            return {\r\n              name: cat,\r\n              y: values[i],\r\n              drilldown: i < 2 ? cat : null, // only first 2 have drilldown\r\n            };\r\n          })\r\n        : values;\r\n\r\n    const baseOptions = {\r\n      chart: { type: chartType },\r\n      title: { text: chartName },\r\n      xAxis: { categories: chartType !== \"pie\" ? categories : undefined, type: chartType === \"column\" ? \"category\" : undefined },\r\n      series:\r\n        chartType === \"pie\"\r\n          ? [\r\n              {\r\n                name: \"Data\",\r\n                colorByPoint: true,\r\n                data: categories.map((cat, i) => ({\r\n                  name: cat,\r\n                  y: values[i],\r\n                })),\r\n              },\r\n            ]\r\n          : [\r\n              {\r\n                name: \"Data\",\r\n                data: seriesData,\r\n              },\r\n            ],\r\n      drilldown: chartType === \"column\" ? { series: drilldownSeries } : undefined,\r\n    };\r\n\r\n    setOptions(baseOptions);\r\n    setSaveStatus(null);\r\n  };\r\n\r\n  // Placeholder save function\r\n  const handleSave = () => {\r\n    // You can add your API call here to save the chart config\r\n    setSaveStatus(\"Save function not implemented yet.\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Create Chart</h3>\r\n      <input\r\n        type=\"text\"\r\n        value={chartName}\r\n        onChange={(e) => setChartName(e.target.value)}\r\n        placeholder=\"Chart name\"\r\n        style={{ marginRight: 10 }}\r\n      />\r\n      <select\r\n        value={chartType}\r\n        onChange={(e) => setChartType(e.target.value)}\r\n        style={{ marginRight: 10 }}\r\n      >\r\n        {chartTypes.map((t) => (\r\n          <option key={t} value={t}>\r\n            {t}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <button onClick={buildOptions} disabled={!data || data.length === 0} style={{ marginRight: 10 }}>\r\n        Build Chart\r\n      </button>\r\n      <button onClick={handleSave} disabled={!options}>\r\n        Save Chart\r\n      </button>\r\n      {saveStatus && <p>{saveStatus}</p>}\r\n      {options && <HighchartsReact highcharts={Highcharts} options={options} />}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,UAAU,MAAM,YAAY;AACnC,OAAOC,eAAe,MAAM,2BAA2B;AACvD,OAAOC,SAAS,MAAM,8BAA8B,CAAC,CAAC;AACtD,SAASC,SAAS,QAAQ,iBAAiB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7CH,SAAS,CAACF,UAAU,CAAC,CAAC,CAAC;;AAGvB,MAAMM,UAAU,GAAG,CAAC,QAAQ,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,SAAS,CAAC;AAEtE,eAAe,SAASC,YAAYA,CAAC;EAAEC;AAAK,CAAC,EAAE;EAAAC,EAAA;EAC7C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,QAAQ,CAAC;EACpD,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,UAAU,CAAC;EACtD,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACiB,UAAU,EAAEC,aAAa,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;;EAElD;EACA,MAAMmB,eAAe,GAAG,CACtB;IACEC,EAAE,EAAE,QAAQ;IACZX,IAAI,EAAE,CACJ,CAAC,cAAc,EAAE,CAAC,CAAC,EACnB,CAAC,YAAY,EAAE,CAAC,CAAC;EAErB,CAAC,EACD;IACEW,EAAE,EAAE,SAAS;IACbX,IAAI,EAAE,CACJ,CAAC,eAAe,EAAE,CAAC,CAAC,EACpB,CAAC,eAAe,EAAE,CAAC,CAAC;EAExB,CAAC,CACF;;EAED;EACA,MAAMY,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAI,CAACZ,IAAI,IAAIA,IAAI,CAACa,MAAM,KAAK,CAAC,EAAE;;IAEhC;IACA,MAAMC,UAAU,GAAGd,IAAI,CAACe,GAAG,CAAEC,GAAG,IAAKC,MAAM,CAACC,MAAM,CAACF,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3D,MAAME,MAAM,GAAGlB,IAAI,CAACe,GAAG,CAAEC,GAAG,IAAKG,MAAM,CAACF,MAAM,CAACC,MAAM,CAACF,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;;IAEpE;IACA,MAAMI,UAAU,GACdlB,SAAS,KAAK,QAAQ,GAClBY,UAAU,CAACC,GAAG,CAAC,CAACM,GAAG,EAAEC,CAAC,KAAK;MACzB,OAAO;QACLC,IAAI,EAAEF,GAAG;QACTG,CAAC,EAAEN,MAAM,CAACI,CAAC,CAAC;QACZ5B,SAAS,EAAE4B,CAAC,GAAG,CAAC,GAAGD,GAAG,GAAG,IAAI,CAAE;MACjC,CAAC;IACH,CAAC,CAAC,GACFH,MAAM;IAEZ,MAAMO,WAAW,GAAG;MAClBC,KAAK,EAAE;QAAEC,IAAI,EAAEzB;MAAU,CAAC;MAC1B0B,KAAK,EAAE;QAAEC,IAAI,EAAEzB;MAAU,CAAC;MAC1B0B,KAAK,EAAE;QAAEhB,UAAU,EAAEZ,SAAS,KAAK,KAAK,GAAGY,UAAU,GAAGiB,SAAS;QAAEJ,IAAI,EAAEzB,SAAS,KAAK,QAAQ,GAAG,UAAU,GAAG6B;MAAU,CAAC;MAC1HC,MAAM,EACJ9B,SAAS,KAAK,KAAK,GACf,CACE;QACEqB,IAAI,EAAE,MAAM;QACZU,YAAY,EAAE,IAAI;QAClBjC,IAAI,EAAEc,UAAU,CAACC,GAAG,CAAC,CAACM,GAAG,EAAEC,CAAC,MAAM;UAChCC,IAAI,EAAEF,GAAG;UACTG,CAAC,EAAEN,MAAM,CAACI,CAAC;QACb,CAAC,CAAC;MACJ,CAAC,CACF,GACD,CACE;QACEC,IAAI,EAAE,MAAM;QACZvB,IAAI,EAAEoB;MACR,CAAC,CACF;MACP1B,SAAS,EAAEQ,SAAS,KAAK,QAAQ,GAAG;QAAE8B,MAAM,EAAEtB;MAAgB,CAAC,GAAGqB;IACpE,CAAC;IAEDxB,UAAU,CAACkB,WAAW,CAAC;IACvBhB,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;;EAED;EACA,MAAMyB,UAAU,GAAGA,CAAA,KAAM;IACvB;IACAzB,aAAa,CAAC,oCAAoC,CAAC;EACrD,CAAC;EAED,oBACEZ,OAAA;IAAAsC,QAAA,gBACEtC,OAAA;MAAAsC,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrB1C,OAAA;MACE8B,IAAI,EAAC,MAAM;MACXa,KAAK,EAAEpC,SAAU;MACjBqC,QAAQ,EAAGC,CAAC,IAAKrC,YAAY,CAACqC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC9CI,WAAW,EAAC,YAAY;MACxBC,KAAK,EAAE;QAAEC,WAAW,EAAE;MAAG;IAAE;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC,eACF1C,OAAA;MACE2C,KAAK,EAAEtC,SAAU;MACjBuC,QAAQ,EAAGC,CAAC,IAAKvC,YAAY,CAACuC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC9CK,KAAK,EAAE;QAAEC,WAAW,EAAE;MAAG,CAAE;MAAAX,QAAA,EAE1BrC,UAAU,CAACiB,GAAG,CAAEgC,CAAC,iBAChBlD,OAAA;QAAgB2C,KAAK,EAAEO,CAAE;QAAAZ,QAAA,EACtBY;MAAC,GADSA,CAAC;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEN,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC,eACT1C,OAAA;MAAQmD,OAAO,EAAEpC,YAAa;MAACqC,QAAQ,EAAE,CAACjD,IAAI,IAAIA,IAAI,CAACa,MAAM,KAAK,CAAE;MAACgC,KAAK,EAAE;QAAEC,WAAW,EAAE;MAAG,CAAE;MAAAX,QAAA,EAAC;IAEjG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACT1C,OAAA;MAAQmD,OAAO,EAAEd,UAAW;MAACe,QAAQ,EAAE,CAAC3C,OAAQ;MAAA6B,QAAA,EAAC;IAEjD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACR/B,UAAU,iBAAIX,OAAA;MAAAsC,QAAA,EAAI3B;IAAU;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjCjC,OAAO,iBAAIT,OAAA,CAACJ,eAAe;MAACyD,UAAU,EAAE1D,UAAW;MAACc,OAAO,EAAEA;IAAQ;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtE,CAAC;AAEV;AAACtC,EAAA,CA9GuBF,YAAY;AAAAoD,EAAA,GAAZpD,YAAY;AAAA,IAAAoD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}