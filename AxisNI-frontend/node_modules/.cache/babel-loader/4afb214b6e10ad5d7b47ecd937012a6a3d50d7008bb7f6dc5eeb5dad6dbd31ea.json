{"ast":null,"code":"// import axios from \"axios\";\n\n// const API_URL = \"http://localhost:8080/api\";\n\n// // Upload Excel file with sheet index and range\n// export const uploadExcel = async (file, sheet, range) => {\n//   const formData = new FormData();\n//   formData.append(\"file\", file);\n//   formData.append(\"sheet\", sheet);\n//   formData.append(\"range\", range);\n\n//   try {\n//     const res = await axios.post(`${API_URL}/upload/excel`, formData, {\n//       headers: { \"Content-Type\": \"multipart/form-data\" },\n//     });\n//     console.log(\"Excel upload response:\", res);\n//     return res;\n//   } catch (err) {\n//     console.error(\"Excel upload error:\", err);\n//     throw err;\n//   }\n// };\n\n// // Upload CSV file\n// export const uploadCsv = async (file) => {\n//   const formData = new FormData();\n//   formData.append(\"file\", file);\n\n//   try {\n//     const res = await axios.post(`${API_URL}/upload/csv`, formData, {\n//       headers: { \"Content-Type\": \"multipart/form-data\" },\n//     });\n//     console.log(\"CSV upload response:\", res);\n//     return res;\n//   } catch (err) {\n//     console.error(\"CSV upload error:\", err);\n//     throw err;\n//   }\n// };\n\n// // Get sheet names from uploaded Excel file\n// export const getSheetNames = async (file) => {\n//   const formData = new FormData();\n//   formData.append(\"file\", file);\n\n//   try {\n//     const res = await axios.post(`${API_URL}/upload/sheets`, formData, {\n//       headers: { \"Content-Type\": \"multipart/form-data\" },\n//     });\n//     console.log(\"Get sheet names response:\", res);\n//     return res;\n//   } catch (err) {\n//     console.error(\"Get sheet names error:\", err);\n//     throw err;\n//   }\n// };\n\n// // Save chart data (name + JSON config)\n// export const saveChart = async (name, configJson) => {\n//   try {\n//     const res = await axios.post(`${API_URL}/chart/save`, { name, configJson });\n//     console.log(\"Save chart response:\", res);\n//     return res;\n//   } catch (err) {\n//     console.error(\"Save chart error:\", err);\n//     throw err;\n//   }\n// };\n\n// // Get all saved charts\n// export const getCharts = async () => {\n//   try {\n//     const res = await axios.get(`${API_URL}/chart/all`);\n//     console.log(\"Get charts response:\", res);\n//     return res;\n//   } catch (err) {\n//     console.error(\"Get charts error:\", err);\n//     throw err;\n//   }\n// };\n\nimport axios from \"axios\";\nconst API_URL = `${process.env.REACT_APP_API_URL}/api`;\n\n// Upload Excel file with sheet index and range\nexport const uploadExcel = async (file, sheet, range) => {\n  const formData = new FormData();\n  formData.append(\"file\", file);\n  formData.append(\"sheet\", sheet);\n  formData.append(\"range\", range);\n  try {\n    const res = await axios.post(`${API_URL}/upload/excel`, formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    });\n    return res;\n  } catch (err) {\n    console.error(\"Excel upload error:\", err);\n    throw err;\n  }\n};\nexport const uploadCsv = async file => {\n  const formData = new FormData();\n  formData.append(\"file\", file);\n  try {\n    const res = await axios.post(`${API_URL}/upload/csv`, formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    });\n    return res;\n  } catch (err) {\n    console.error(\"CSV upload error:\", err);\n    throw err;\n  }\n};\nexport const getSheetNames = async file => {\n  const formData = new FormData();\n  formData.append(\"file\", file);\n  try {\n    const res = await axios.post(`${API_URL}/upload/sheets`, formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    });\n    return res;\n  } catch (err) {\n    console.error(\"Get sheet names error:\", err);\n    throw err;\n  }\n};\nexport const saveChart = async (name, configJson) => {\n  try {\n    const res = await axios.post(`${API_URL}/chart/save`, {\n      name,\n      configJson\n    });\n    return res;\n  } catch (err) {\n    console.error(\"Save chart error:\", err);\n    throw err;\n  }\n};\nexport const getCharts = async () => {\n  try {\n    const res = await axios.get(`${API_URL}/chart/all`);\n    return res;\n  } catch (err) {\n    console.error(\"Get charts error:\", err);\n    throw err;\n  }\n};","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","uploadExcel","file","sheet","range","formData","FormData","append","res","post","headers","err","console","error","uploadCsv","getSheetNames","saveChart","name","configJson","getCharts","get"],"sources":["C:/Denis_Dev/AxisNI/AxisNI-frontend/src/services/api.js"],"sourcesContent":["// import axios from \"axios\";\r\n\r\n// const API_URL = \"http://localhost:8080/api\";\r\n\r\n// // Upload Excel file with sheet index and range\r\n// export const uploadExcel = async (file, sheet, range) => {\r\n//   const formData = new FormData();\r\n//   formData.append(\"file\", file);\r\n//   formData.append(\"sheet\", sheet);\r\n//   formData.append(\"range\", range);\r\n\r\n//   try {\r\n//     const res = await axios.post(`${API_URL}/upload/excel`, formData, {\r\n//       headers: { \"Content-Type\": \"multipart/form-data\" },\r\n//     });\r\n//     console.log(\"Excel upload response:\", res);\r\n//     return res;\r\n//   } catch (err) {\r\n//     console.error(\"Excel upload error:\", err);\r\n//     throw err;\r\n//   }\r\n// };\r\n\r\n// // Upload CSV file\r\n// export const uploadCsv = async (file) => {\r\n//   const formData = new FormData();\r\n//   formData.append(\"file\", file);\r\n\r\n//   try {\r\n//     const res = await axios.post(`${API_URL}/upload/csv`, formData, {\r\n//       headers: { \"Content-Type\": \"multipart/form-data\" },\r\n//     });\r\n//     console.log(\"CSV upload response:\", res);\r\n//     return res;\r\n//   } catch (err) {\r\n//     console.error(\"CSV upload error:\", err);\r\n//     throw err;\r\n//   }\r\n// };\r\n\r\n// // Get sheet names from uploaded Excel file\r\n// export const getSheetNames = async (file) => {\r\n//   const formData = new FormData();\r\n//   formData.append(\"file\", file);\r\n\r\n//   try {\r\n//     const res = await axios.post(`${API_URL}/upload/sheets`, formData, {\r\n//       headers: { \"Content-Type\": \"multipart/form-data\" },\r\n//     });\r\n//     console.log(\"Get sheet names response:\", res);\r\n//     return res;\r\n//   } catch (err) {\r\n//     console.error(\"Get sheet names error:\", err);\r\n//     throw err;\r\n//   }\r\n// };\r\n\r\n// // Save chart data (name + JSON config)\r\n// export const saveChart = async (name, configJson) => {\r\n//   try {\r\n//     const res = await axios.post(`${API_URL}/chart/save`, { name, configJson });\r\n//     console.log(\"Save chart response:\", res);\r\n//     return res;\r\n//   } catch (err) {\r\n//     console.error(\"Save chart error:\", err);\r\n//     throw err;\r\n//   }\r\n// };\r\n\r\n// // Get all saved charts\r\n// export const getCharts = async () => {\r\n//   try {\r\n//     const res = await axios.get(`${API_URL}/chart/all`);\r\n//     console.log(\"Get charts response:\", res);\r\n//     return res;\r\n//   } catch (err) {\r\n//     console.error(\"Get charts error:\", err);\r\n//     throw err;\r\n//   }\r\n// };\r\n\r\n\r\nimport axios from \"axios\";\r\n\r\n\r\nconst API_URL = `${process.env.REACT_APP_API_URL}/api`;\r\n\r\n// Upload Excel file with sheet index and range\r\nexport const uploadExcel = async (file, sheet, range) => {\r\n  const formData = new FormData();\r\n  formData.append(\"file\", file);\r\n  formData.append(\"sheet\", sheet);\r\n  formData.append(\"range\", range);\r\n\r\n  try {\r\n    const res = await axios.post(`${API_URL}/upload/excel`, formData, {\r\n      headers: { \"Content-Type\": \"multipart/form-data\" },\r\n    });\r\n    return res;\r\n  } catch (err) {\r\n    console.error(\"Excel upload error:\", err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const uploadCsv = async (file) => {\r\n  const formData = new FormData();\r\n  formData.append(\"file\", file);\r\n\r\n  try {\r\n    const res = await axios.post(`${API_URL}/upload/csv`, formData, {\r\n      headers: { \"Content-Type\": \"multipart/form-data\" },\r\n    });\r\n    return res;\r\n  } catch (err) {\r\n    console.error(\"CSV upload error:\", err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const getSheetNames = async (file) => {\r\n  const formData = new FormData();\r\n  formData.append(\"file\", file);\r\n\r\n  try {\r\n    const res = await axios.post(`${API_URL}/upload/sheets`, formData, {\r\n      headers: { \"Content-Type\": \"multipart/form-data\" },\r\n    });\r\n    return res;\r\n  } catch (err) {\r\n    console.error(\"Get sheet names error:\", err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const saveChart = async (name, configJson) => {\r\n  try {\r\n    const res = await axios.post(`${API_URL}/chart/save`, { name, configJson });\r\n    return res;\r\n  } catch (err) {\r\n    console.error(\"Save chart error:\", err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const getCharts = async () => {\r\n  try {\r\n    const res = await axios.get(`${API_URL}/chart/all`);\r\n    return res;\r\n  } catch (err) {\r\n    console.error(\"Get charts error:\", err);\r\n    throw err;\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}