{"ast":null,"code":"var _jsxFileName = \"C:\\\\Denis_Dev\\\\AxisNI\\\\AxisNI-frontend\\\\src\\\\pages\\\\DashboardPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport Highcharts from \"../components/utils/highcharts-config\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mainData = [{\n  Year: \"2010\",\n  TotalBudget: 11804.2,\n  TotalResource: 10316.1,\n  TotalCapital: 1488.1\n}, {\n  Year: \"2011\",\n  TotalBudget: 11520.4,\n  TotalResource: 10329.1,\n  TotalCapital: 1191.3\n}, {\n  Year: \"2012\",\n  TotalBudget: 11525.9,\n  TotalResource: 10353.4,\n  TotalCapital: 1172.5\n}, {\n  Year: \"2013\",\n  TotalBudget: 11548.7,\n  TotalResource: 10431.9,\n  TotalCapital: 1116.8\n}, {\n  Year: \"2014\",\n  TotalBudget: 11919.6,\n  TotalResource: 10519.9,\n  TotalCapital: 1399.7\n}, {\n  Year: \"2015\",\n  TotalBudget: 11293.8,\n  TotalResource: 10176.1,\n  TotalCapital: 1117.7\n}, {\n  Year: \"2016\",\n  TotalBudget: 11614,\n  TotalResource: 10398,\n  TotalCapital: 1216\n}, {\n  Year: \"2017\",\n  TotalBudget: 11845.1,\n  TotalResource: 10612.8,\n  TotalCapital: 1232.3\n}, {\n  Year: \"2018\",\n  TotalBudget: 12204.7,\n  TotalResource: 10780.4,\n  TotalCapital: 1424.3\n}, {\n  Year: \"2019\",\n  TotalBudget: 12741.6,\n  TotalResource: 11351.5,\n  TotalCapital: 1390.1\n}, {\n  Year: \"2020\",\n  TotalBudget: 13746.4,\n  TotalResource: 12196.9,\n  TotalCapital: 1549.5\n}, {\n  Year: \"2021\",\n  TotalBudget: 14782.5,\n  TotalResource: 13001.5,\n  TotalCapital: 1781\n}, {\n  Year: \"2022\",\n  TotalBudget: 16323.341,\n  TotalResource: 14269.097,\n  TotalCapital: 2054.244\n}, {\n  Year: \"2023\",\n  TotalBudget: 16451.684,\n  TotalResource: 14211.967,\n  TotalCapital: 2239.717\n}, {\n  Year: \"2024\",\n  TotalBudget: 17255.6,\n  TotalResource: 15168.2,\n  TotalCapital: 2087.4\n}, {\n  Year: \"2025\",\n  TotalBudget: 19085,\n  TotalResource: 16639.4,\n  TotalCapital: 2445.6\n}];\nconst drilldownData = require(\"../data/drilldownData.json\"); // Place the parsed drilldown JSON data here\n\nconst COLORS = {\n  total: \"#2a9d8f\",\n  resource: \"#e9c46a\",\n  capital: \"#f4a261\"\n};\nexport default function CoolDashboard() {\n  _s();\n  const [selectedView, setSelectedView] = useState(\"TotalBudget\");\n  const [drilldownYear, setDrilldownYear] = useState(null);\n  const categories = mainData.map(d => d.Year);\n  const totalBudgetSeries = mainData.map(d => ({\n    y: d.TotalBudget,\n    drilldown: d.Year\n  }));\n  const drilldownSeries = Object.entries(drilldownData).flatMap(([year, data]) => [{\n    id: year,\n    name: \"Resource Breakdown\",\n    type: \"column\",\n    data: data.resource.map((val, i) => [data.categories[i], val]),\n    color: COLORS.resource\n  }, {\n    id: year,\n    name: \"Capital Breakdown\",\n    type: \"column\",\n    data: data.capital.map((val, i) => [data.categories[i], val]),\n    color: COLORS.capital\n  }]);\n  const options = {\n    chart: {\n      height: 600,\n      type: selectedView === \"TotalBudget\" ? \"line\" : \"column\"\n    },\n    title: {\n      text: selectedView === \"TotalBudget\" ? \"Total Budget Over Years (\\u00a3M)\" : `Budget Breakdown for ${drilldownYear} (\\u00a3M)`,\n      style: {\n        fontWeight: \"bold\",\n        fontSize: \"20px\"\n      }\n    },\n    xAxis: {\n      categories: selectedView === \"TotalBudget\" ? categories : drilldownYear ? drilldownData[drilldownYear].categories : [],\n      title: {\n        text: selectedView === \"TotalBudget\" ? \"Year\" : \"Department\"\n      },\n      crosshair: true\n    },\n    yAxis: {\n      min: 0,\n      title: {\n        text: \"Budget (\\u00a3M)\"\n      },\n      labels: {\n        formatter() {\n          return `\\u00a3${this.value}M`;\n        }\n      }\n    },\n    tooltip: {\n      shared: true,\n      valuePrefix: \"\\u00a3\",\n      valueSuffix: \"M\"\n    },\n    plotOptions: {\n      series: {\n        cursor: \"pointer\",\n        point: {\n          events: {\n            click: function () {\n              if (selectedView === \"TotalBudget\") {\n                setDrilldownYear(this.category);\n                setSelectedView(\"Breakdown\");\n              }\n            }\n          }\n        }\n      },\n      column: {\n        grouping: true,\n        shadow: false,\n        borderWidth: 0,\n        dataLabels: {\n          enabled: true,\n          format: \"\\u00a3{y}M\"\n        }\n      }\n    },\n    legend: {\n      enabled: selectedView !== \"TotalBudget\"\n    },\n    series: selectedView === \"TotalBudget\" ? [{\n      name: \"Total Budget\",\n      data: totalBudgetSeries,\n      color: COLORS.total\n    }] : drilldownSeries.filter(s => s.id === drilldownYear),\n    credits: {\n      enabled: false\n    }\n  };\n  const latestData = mainData[mainData.length - 1];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: 1100,\n      margin: \"auto\",\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: \"center\",\n        color: COLORS.total\n      },\n      children: \"Budget Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-around\",\n        flexWrap: \"wrap\",\n        marginBottom: 30\n      },\n      children: [\"Total\", \"Resource\", \"Capital\"].map(key => {\n        const label = `${key} Budget`;\n        const value = latestData[`Total${key}`];\n        const color = COLORS[key.toLowerCase()];\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: \"1 1 250px\",\n            background: color,\n            color: \"white\",\n            borderRadius: 8,\n            padding: 20,\n            textAlign: \"center\",\n            margin: 10,\n            cursor: key === \"Total\" ? \"default\" : \"pointer\"\n          },\n          onClick: () => {\n            if (key !== \"Total\") {\n              setSelectedView(\"Breakdown\");\n              setDrilldownYear(\"2025\");\n            } else {\n              setSelectedView(\"TotalBudget\");\n              setDrilldownYear(null);\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontSize: 24,\n              fontWeight: \"bold\"\n            },\n            children: [\"\\\\u00a3\", value.toLocaleString(), \"M\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this)]\n        }, label, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HighchartsReact, {\n      highcharts: Highcharts,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), selectedView === \"Breakdown\" && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setSelectedView(\"TotalBudget\");\n        setDrilldownYear(null);\n      },\n      style: {\n        marginTop: 20,\n        padding: \"10px 20px\",\n        backgroundColor: COLORS.total,\n        color: \"white\",\n        border: \"none\",\n        borderRadius: 5,\n        fontWeight: \"bold\"\n      },\n      children: \"Back to Overview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: \"center\",\n        marginTop: 30\n      },\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/upload\",\n        style: {\n          display: \"inline-block\",\n          padding: \"12px 28px\",\n          fontSize: 18,\n          backgroundColor: COLORS.total,\n          color: \"white\",\n          borderRadius: 8,\n          textDecoration: \"none\"\n        },\n        children: \"Upload Your Data & Create Charts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n}\n_s(CoolDashboard, \"rv86lJ+UNcdxzQ8a4v74E1Q/ooM=\");\n_c = CoolDashboard;\nvar _c;\n$RefreshReg$(_c, \"CoolDashboard\");","map":{"version":3,"names":["React","useState","HighchartsReact","Highcharts","Link","jsxDEV","_jsxDEV","mainData","Year","TotalBudget","TotalResource","TotalCapital","drilldownData","require","COLORS","total","resource","capital","CoolDashboard","_s","selectedView","setSelectedView","drilldownYear","setDrilldownYear","categories","map","d","totalBudgetSeries","y","drilldown","drilldownSeries","Object","entries","flatMap","year","data","id","name","type","val","i","color","options","chart","height","title","text","style","fontWeight","fontSize","xAxis","crosshair","yAxis","min","labels","formatter","value","tooltip","shared","valuePrefix","valueSuffix","plotOptions","series","cursor","point","events","click","category","column","grouping","shadow","borderWidth","dataLabels","enabled","format","legend","filter","s","credits","latestData","length","maxWidth","margin","padding","children","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","flexWrap","marginBottom","key","label","toLowerCase","flex","background","borderRadius","onClick","toLocaleString","highcharts","marginTop","backgroundColor","border","to","textDecoration","_c","$RefreshReg$"],"sources":["C:/Denis_Dev/AxisNI/AxisNI-frontend/src/pages/DashboardPage.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport HighchartsReact from \"highcharts-react-official\";\r\nimport Highcharts from \"../components/utils/highcharts-config\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst mainData = [\r\n  { Year: \"2010\", TotalBudget: 11804.2, TotalResource: 10316.1, TotalCapital: 1488.1 },\r\n  { Year: \"2011\", TotalBudget: 11520.4, TotalResource: 10329.1, TotalCapital: 1191.3 },\r\n  { Year: \"2012\", TotalBudget: 11525.9, TotalResource: 10353.4, TotalCapital: 1172.5 },\r\n  { Year: \"2013\", TotalBudget: 11548.7, TotalResource: 10431.9, TotalCapital: 1116.8 },\r\n  { Year: \"2014\", TotalBudget: 11919.6, TotalResource: 10519.9, TotalCapital: 1399.7 },\r\n  { Year: \"2015\", TotalBudget: 11293.8, TotalResource: 10176.1, TotalCapital: 1117.7 },\r\n  { Year: \"2016\", TotalBudget: 11614, TotalResource: 10398, TotalCapital: 1216 },\r\n  { Year: \"2017\", TotalBudget: 11845.1, TotalResource: 10612.8, TotalCapital: 1232.3 },\r\n  { Year: \"2018\", TotalBudget: 12204.7, TotalResource: 10780.4, TotalCapital: 1424.3 },\r\n  { Year: \"2019\", TotalBudget: 12741.6, TotalResource: 11351.5, TotalCapital: 1390.1 },\r\n  { Year: \"2020\", TotalBudget: 13746.4, TotalResource: 12196.9, TotalCapital: 1549.5 },\r\n  { Year: \"2021\", TotalBudget: 14782.5, TotalResource: 13001.5, TotalCapital: 1781 },\r\n  { Year: \"2022\", TotalBudget: 16323.341, TotalResource: 14269.097, TotalCapital: 2054.244 },\r\n  { Year: \"2023\", TotalBudget: 16451.684, TotalResource: 14211.967, TotalCapital: 2239.717 },\r\n  { Year: \"2024\", TotalBudget: 17255.6, TotalResource: 15168.2, TotalCapital: 2087.4 },\r\n  { Year: \"2025\", TotalBudget: 19085, TotalResource: 16639.4, TotalCapital: 2445.6 },\r\n];\r\n\r\nconst drilldownData = require(\"../data/drilldownData.json\"); // Place the parsed drilldown JSON data here\r\n\r\nconst COLORS = {\r\n  total: \"#2a9d8f\",\r\n  resource: \"#e9c46a\",\r\n  capital: \"#f4a261\",\r\n};\r\n\r\nexport default function CoolDashboard() {\r\n  const [selectedView, setSelectedView] = useState(\"TotalBudget\");\r\n  const [drilldownYear, setDrilldownYear] = useState(null);\r\n\r\n  const categories = mainData.map((d) => d.Year);\r\n\r\n  const totalBudgetSeries = mainData.map((d) => ({\r\n    y: d.TotalBudget,\r\n    drilldown: d.Year,\r\n  }));\r\n\r\n  const drilldownSeries = Object.entries(drilldownData).flatMap(([year, data]) => [\r\n    {\r\n      id: year,\r\n      name: \"Resource Breakdown\",\r\n      type: \"column\",\r\n      data: data.resource.map((val, i) => [data.categories[i], val]),\r\n      color: COLORS.resource,\r\n    },\r\n    {\r\n      id: year,\r\n      name: \"Capital Breakdown\",\r\n      type: \"column\",\r\n      data: data.capital.map((val, i) => [data.categories[i], val]),\r\n      color: COLORS.capital,\r\n    },\r\n  ]);\r\n\r\n  const options = {\r\n    chart: {\r\n      height: 600,\r\n      type: selectedView === \"TotalBudget\" ? \"line\" : \"column\",\r\n    },\r\n    title: {\r\n      text:\r\n        selectedView === \"TotalBudget\"\r\n          ? \"Total Budget Over Years (\\u00a3M)\"\r\n          : `Budget Breakdown for ${drilldownYear} (\\u00a3M)`,\r\n      style: { fontWeight: \"bold\", fontSize: \"20px\" },\r\n    },\r\n    xAxis: {\r\n      categories:\r\n        selectedView === \"TotalBudget\"\r\n          ? categories\r\n          : drilldownYear\r\n          ? drilldownData[drilldownYear].categories\r\n          : [],\r\n      title: {\r\n        text: selectedView === \"TotalBudget\" ? \"Year\" : \"Department\",\r\n      },\r\n      crosshair: true,\r\n    },\r\n    yAxis: {\r\n      min: 0,\r\n      title: { text: \"Budget (\\u00a3M)\" },\r\n      labels: {\r\n        formatter() {\r\n          return `\\u00a3${this.value}M`;\r\n        },\r\n      },\r\n    },\r\n    tooltip: {\r\n      shared: true,\r\n      valuePrefix: \"\\u00a3\",\r\n      valueSuffix: \"M\",\r\n    },\r\n    plotOptions: {\r\n      series: {\r\n        cursor: \"pointer\",\r\n        point: {\r\n          events: {\r\n            click: function () {\r\n              if (selectedView === \"TotalBudget\") {\r\n                setDrilldownYear(this.category);\r\n                setSelectedView(\"Breakdown\");\r\n              }\r\n            },\r\n          },\r\n        },\r\n      },\r\n      column: {\r\n        grouping: true,\r\n        shadow: false,\r\n        borderWidth: 0,\r\n        dataLabels: {\r\n          enabled: true,\r\n          format: \"\\u00a3{y}M\",\r\n        },\r\n      },\r\n    },\r\n    legend: {\r\n      enabled: selectedView !== \"TotalBudget\",\r\n    },\r\n    series:\r\n      selectedView === \"TotalBudget\"\r\n        ? [\r\n            {\r\n              name: \"Total Budget\",\r\n              data: totalBudgetSeries,\r\n              color: COLORS.total,\r\n            },\r\n          ]\r\n        : drilldownSeries.filter((s) => s.id === drilldownYear),\r\n    credits: { enabled: false },\r\n  };\r\n\r\n  const latestData = mainData[mainData.length - 1];\r\n\r\n  return (\r\n    <div style={{ maxWidth: 1100, margin: \"auto\", padding: 20 }}>\r\n      <h1 style={{ textAlign: \"center\", color: COLORS.total }}>Budget Dashboard</h1>\r\n\r\n      <div style={{ display: \"flex\", justifyContent: \"space-around\", flexWrap: \"wrap\", marginBottom: 30 }}>\r\n        {[\"Total\", \"Resource\", \"Capital\"].map((key) => {\r\n          const label = `${key} Budget`;\r\n          const value = latestData[`Total${key}`];\r\n          const color = COLORS[key.toLowerCase()];\r\n          return (\r\n            <div\r\n              key={label}\r\n              style={{\r\n                flex: \"1 1 250px\",\r\n                background: color,\r\n                color: \"white\",\r\n                borderRadius: 8,\r\n                padding: 20,\r\n                textAlign: \"center\",\r\n                margin: 10,\r\n                cursor: key === \"Total\" ? \"default\" : \"pointer\",\r\n              }}\r\n              onClick={() => {\r\n                if (key !== \"Total\") {\r\n                  setSelectedView(\"Breakdown\");\r\n                  setDrilldownYear(\"2025\");\r\n                } else {\r\n                  setSelectedView(\"TotalBudget\");\r\n                  setDrilldownYear(null);\r\n                }\r\n              }}\r\n            >\r\n              <h3>{label}</h3>\r\n              <p style={{ fontSize: 24, fontWeight: \"bold\" }}>\\u00a3{value.toLocaleString()}M</p>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      <HighchartsReact highcharts={Highcharts} options={options} />\r\n\r\n      {selectedView === \"Breakdown\" && (\r\n        <button\r\n          onClick={() => {\r\n            setSelectedView(\"TotalBudget\");\r\n            setDrilldownYear(null);\r\n          }}\r\n          style={{\r\n            marginTop: 20,\r\n            padding: \"10px 20px\",\r\n            backgroundColor: COLORS.total,\r\n            color: \"white\",\r\n            border: \"none\",\r\n            borderRadius: 5,\r\n            fontWeight: \"bold\",\r\n          }}\r\n        >\r\n          Back to Overview\r\n        </button>\r\n      )}\r\n\r\n      <div style={{ textAlign: \"center\", marginTop: 30 }}>\r\n        <Link\r\n          to=\"/upload\"\r\n          style={{\r\n            display: \"inline-block\",\r\n            padding: \"12px 28px\",\r\n            fontSize: 18,\r\n            backgroundColor: COLORS.total,\r\n            color: \"white\",\r\n            borderRadius: 8,\r\n            textDecoration: \"none\",\r\n          }}\r\n        >\r\n          Upload Your Data & Create Charts\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}