{"ast":null,"code":"// import axios from \"axios\";\n// const API_URL = \"http://localhost:8080/api\";\n// // Upload Excel file with sheet index and range\n// export const uploadExcel = async (file, sheet, range) => {\n//   const formData = new FormData();\n//   formData.append(\"file\", file);\n//   formData.append(\"sheet\", sheet);\n//   formData.append(\"range\", range);\n//   try {\n//     const res = await axios.post(`${API_URL}/upload/excel`, formData, {\n//       headers: { \"Content-Type\": \"multipart/form-data\" },\n//     });\n//     console.log(\"Excel upload response:\", res);\n//     return res;\n//   } catch (err) {\n//     console.error(\"Excel upload error:\", err);\n//     throw err;\n//   }\n// };\n// // Upload CSV file\n// export const uploadCsv = async (file) => {\n//   const formData = new FormData();\n//   formData.append(\"file\", file);\n//   try {\n//     const res = await axios.post(`${API_URL}/upload/csv`, formData, {\n//       headers: { \"Content-Type\": \"multipart/form-data\" },\n//     });\n//     console.log(\"CSV upload response:\", res);\n//     return res;\n//   } catch (err) {\n//     console.error(\"CSV upload error:\", err);\n//     throw err;\n//   }\n// };\n// // Get sheet names from uploaded Excel file\n// export const getSheetNames = async (file) => {\n//   const formData = new FormData();\n//   formData.append(\"file\", file);\n//   try {\n//     const res = await axios.post(`${API_URL}/upload/sheets`, formData, {\n//       headers: { \"Content-Type\": \"multipart/form-data\" },\n//     });\n//     console.log(\"Get sheet names response:\", res);\n//     return res;\n//   } catch (err) {\n//     console.error(\"Get sheet names error:\", err);\n//     throw err;\n//   }\n// };\n// // Save chart data (name + JSON config)\n// export const saveChart = async (name, configJson) => {\n//   try {\n//     const res = await axios.post(`${API_URL}/chart/save`, { name, configJson });\n//     console.log(\"Save chart response:\", res);\n//     return res;\n//   } catch (err) {\n//     console.error(\"Save chart error:\", err);\n//     throw err;\n//   }\n// };\n// // Get all saved charts\n// export const getCharts = async () => {\n//   try {\n//     const res = await axios.get(`${API_URL}/chart/all`);\n//     console.log(\"Get charts response:\", res);\n//     return res;\n//   } catch (err) {\n//     console.error(\"Get charts error:\", err);\n//     throw err;\n//   }\n// };\nimport axios from\"axios\";const API_URL=\"\".concat(process.env.REACT_APP_API_URL,\"/api\");// Upload Excel file with sheet index and range\nexport const uploadExcel=async(file,sheet,range)=>{const formData=new FormData();formData.append(\"file\",file);formData.append(\"sheet\",sheet);formData.append(\"range\",range);try{const res=await axios.post(\"\".concat(API_URL,\"/upload/excel\"),formData,{headers:{\"Content-Type\":\"multipart/form-data\"}});return res;}catch(err){console.error(\"Excel upload error:\",err);throw err;}};export const uploadCsv=async file=>{const formData=new FormData();formData.append(\"file\",file);try{const res=await axios.post(\"\".concat(API_URL,\"/upload/csv\"),formData,{headers:{\"Content-Type\":\"multipart/form-data\"}});return res;}catch(err){console.error(\"CSV upload error:\",err);throw err;}};export const getSheetNames=async file=>{const formData=new FormData();formData.append(\"file\",file);try{const res=await axios.post(\"\".concat(API_URL,\"/upload/sheets\"),formData,{headers:{\"Content-Type\":\"multipart/form-data\"}});return res;}catch(err){console.error(\"Get sheet names error:\",err);throw err;}};export const saveChart=async(name,configJson)=>{try{const res=await axios.post(\"\".concat(API_URL,\"/chart/save\"),{name,configJson});return res;}catch(err){console.error(\"Save chart error:\",err);throw err;}};export const getCharts=async()=>{try{const res=await axios.get(\"\".concat(API_URL,\"/chart/all\"));return res;}catch(err){console.error(\"Get charts error:\",err);throw err;}};","map":{"version":3,"names":["axios","API_URL","concat","process","env","REACT_APP_API_URL","uploadExcel","file","sheet","range","formData","FormData","append","res","post","headers","err","console","error","uploadCsv","getSheetNames","saveChart","name","configJson","getCharts","get"],"sources":["C:/Denis_Dev/AxisNI/AxisNI-frontend/src/services/api.js"],"sourcesContent":["// import axios from \"axios\";\r\n\r\n// const API_URL = \"http://localhost:8080/api\";\r\n\r\n// // Upload Excel file with sheet index and range\r\n// export const uploadExcel = async (file, sheet, range) => {\r\n//   const formData = new FormData();\r\n//   formData.append(\"file\", file);\r\n//   formData.append(\"sheet\", sheet);\r\n//   formData.append(\"range\", range);\r\n\r\n//   try {\r\n//     const res = await axios.post(`${API_URL}/upload/excel`, formData, {\r\n//       headers: { \"Content-Type\": \"multipart/form-data\" },\r\n//     });\r\n//     console.log(\"Excel upload response:\", res);\r\n//     return res;\r\n//   } catch (err) {\r\n//     console.error(\"Excel upload error:\", err);\r\n//     throw err;\r\n//   }\r\n// };\r\n\r\n// // Upload CSV file\r\n// export const uploadCsv = async (file) => {\r\n//   const formData = new FormData();\r\n//   formData.append(\"file\", file);\r\n\r\n//   try {\r\n//     const res = await axios.post(`${API_URL}/upload/csv`, formData, {\r\n//       headers: { \"Content-Type\": \"multipart/form-data\" },\r\n//     });\r\n//     console.log(\"CSV upload response:\", res);\r\n//     return res;\r\n//   } catch (err) {\r\n//     console.error(\"CSV upload error:\", err);\r\n//     throw err;\r\n//   }\r\n// };\r\n\r\n// // Get sheet names from uploaded Excel file\r\n// export const getSheetNames = async (file) => {\r\n//   const formData = new FormData();\r\n//   formData.append(\"file\", file);\r\n\r\n//   try {\r\n//     const res = await axios.post(`${API_URL}/upload/sheets`, formData, {\r\n//       headers: { \"Content-Type\": \"multipart/form-data\" },\r\n//     });\r\n//     console.log(\"Get sheet names response:\", res);\r\n//     return res;\r\n//   } catch (err) {\r\n//     console.error(\"Get sheet names error:\", err);\r\n//     throw err;\r\n//   }\r\n// };\r\n\r\n// // Save chart data (name + JSON config)\r\n// export const saveChart = async (name, configJson) => {\r\n//   try {\r\n//     const res = await axios.post(`${API_URL}/chart/save`, { name, configJson });\r\n//     console.log(\"Save chart response:\", res);\r\n//     return res;\r\n//   } catch (err) {\r\n//     console.error(\"Save chart error:\", err);\r\n//     throw err;\r\n//   }\r\n// };\r\n\r\n// // Get all saved charts\r\n// export const getCharts = async () => {\r\n//   try {\r\n//     const res = await axios.get(`${API_URL}/chart/all`);\r\n//     console.log(\"Get charts response:\", res);\r\n//     return res;\r\n//   } catch (err) {\r\n//     console.error(\"Get charts error:\", err);\r\n//     throw err;\r\n//   }\r\n// };\r\n\r\n\r\nimport axios from \"axios\";\r\n\r\n\r\nconst API_URL = `${process.env.REACT_APP_API_URL}/api`;\r\n\r\n// Upload Excel file with sheet index and range\r\nexport const uploadExcel = async (file, sheet, range) => {\r\n  const formData = new FormData();\r\n  formData.append(\"file\", file);\r\n  formData.append(\"sheet\", sheet);\r\n  formData.append(\"range\", range);\r\n\r\n  try {\r\n    const res = await axios.post(`${API_URL}/upload/excel`, formData, {\r\n      headers: { \"Content-Type\": \"multipart/form-data\" },\r\n    });\r\n    return res;\r\n  } catch (err) {\r\n    console.error(\"Excel upload error:\", err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const uploadCsv = async (file) => {\r\n  const formData = new FormData();\r\n  formData.append(\"file\", file);\r\n\r\n  try {\r\n    const res = await axios.post(`${API_URL}/upload/csv`, formData, {\r\n      headers: { \"Content-Type\": \"multipart/form-data\" },\r\n    });\r\n    return res;\r\n  } catch (err) {\r\n    console.error(\"CSV upload error:\", err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const getSheetNames = async (file) => {\r\n  const formData = new FormData();\r\n  formData.append(\"file\", file);\r\n\r\n  try {\r\n    const res = await axios.post(`${API_URL}/upload/sheets`, formData, {\r\n      headers: { \"Content-Type\": \"multipart/form-data\" },\r\n    });\r\n    return res;\r\n  } catch (err) {\r\n    console.error(\"Get sheet names error:\", err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const saveChart = async (name, configJson) => {\r\n  try {\r\n    const res = await axios.post(`${API_URL}/chart/save`, { name, configJson });\r\n    return res;\r\n  } catch (err) {\r\n    console.error(\"Save chart error:\", err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const getCharts = async () => {\r\n  try {\r\n    const res = await axios.get(`${API_URL}/chart/all`);\r\n    return res;\r\n  } catch (err) {\r\n    console.error(\"Get charts error:\", err);\r\n    throw err;\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}