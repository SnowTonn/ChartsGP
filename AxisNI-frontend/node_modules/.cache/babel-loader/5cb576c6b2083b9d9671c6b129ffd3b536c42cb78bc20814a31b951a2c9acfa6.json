{"ast":null,"code":"var _jsxFileName = \"C:\\\\Denis_Dev\\\\AxisNI\\\\AxisNI-frontend\\\\src\\\\components\\\\FileUploader.jsx\",\n  _s2 = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { uploadExcel, uploadCsv, getSheetNames } from \"../services/api\";\nimport ChartCreator from \"./ChartCreator\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function FileUploader() {\n  _s2();\n  var _s = $RefreshSig$();\n  const [fileEntries, setFileEntries] = useState([]);\n  const [mergedData, setMergedData] = useState([]);\n  const [showDataPreview, setShowDataPreview] = useState(false);\n  const [showUploaderPanel, setShowUploaderPanel] = useState(true);\n\n  // Array of chart configs: { id, title, xKey, yKey, drilldownKeys }\n  const [charts, setCharts] = useState([]);\n  const buttonStyle = {\n    fontWeight: \"600\",\n    fontSize: \"0.85rem\",\n    padding: \"6px 12px\",\n    cursor: \"pointer\",\n    borderRadius: \"4px\",\n    border: \"1px solid #555\",\n    backgroundColor: \"#fff\",\n    minWidth: \"120px\",\n    textAlign: \"center\",\n    userSelect: \"none\",\n    margin: \"4px\",\n    transition: \"all 0.2s ease\",\n    display: \"inline-flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    gap: \"6px\"\n  };\n  const hoverFocusStyle = {\n    backgroundColor: \"#007bff\",\n    borderColor: \"#007bff\",\n    color: \"#fff\"\n  };\n  function InteractiveButton({\n    children,\n    onClick\n  }) {\n    _s();\n    const [hover, setHover] = React.useState(false);\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClick,\n      style: {\n        ...buttonStyle,\n        ...(hover ? hoverFocusStyle : {})\n      },\n      onMouseEnter: () => setHover(true),\n      onMouseLeave: () => setHover(false),\n      onFocus: () => setHover(true),\n      onBlur: () => setHover(false),\n      type: \"button\",\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n  _s(InteractiveButton, \"bRXmKus9fOZFlca/6zXTYU+twGY=\");\n  const handleFilesChange = async e => {\n    const selectedFiles = Array.from(e.target.files);\n    const newEntries = [];\n    for (const file of selectedFiles) {\n      const ext = file.name.split(\".\").pop().toLowerCase();\n      const fileType = ext === \"csv\" ? \"csv\" : \"excel\";\n      let sheetNames = [];\n      if (fileType === \"excel\") {\n        try {\n          const res = await getSheetNames(file);\n          sheetNames = res.data.sheets || [];\n        } catch {\n          alert(`Failed to get sheet names for ${file.name}`);\n        }\n      }\n      newEntries.push({\n        file,\n        fileType,\n        sheetIndex: 0,\n        range: \"A3:H19\",\n        sheetNames\n      });\n    }\n    setFileEntries(newEntries);\n    setMergedData([]);\n    setCharts([]); // reset charts\n  };\n  const updateEntry = (index, field, value) => {\n    setFileEntries(prev => {\n      const updated = [...prev];\n      updated[index][field] = value;\n      return updated;\n    });\n  };\n  const handleUpload = async () => {\n    const datasets = [];\n    for (let i = 0; i < fileEntries.length; i++) {\n      const {\n        file,\n        fileType,\n        sheetIndex,\n        range\n      } = fileEntries[i];\n      try {\n        const res = fileType === \"excel\" ? await uploadExcel(file, sheetIndex, range) : await uploadCsv(file);\n        const data = res.data;\n        if (Array.isArray(data)) {\n          // Prefix columns to avoid collisions\n          const prefixed = data.map(row => {\n            const newRow = {};\n            for (const [key, value] of Object.entries(row)) {\n              newRow[`F${i + 1}_${key}`] = value;\n            }\n            return newRow;\n          });\n          datasets.push(prefixed);\n        }\n      } catch {\n        alert(`Upload failed for ${file.name}`);\n      }\n    }\n\n    // Merge datasets horizontally by row index\n    const maxRows = Math.max(...datasets.map(d => d.length));\n    const merged = [];\n    for (let i = 0; i < maxRows; i++) {\n      const row = {};\n      for (const dataset of datasets) {\n        const currentRow = dataset[i] || {};\n        Object.assign(row, currentRow);\n      }\n      merged.push(row);\n    }\n    setMergedData(merged);\n    setShowDataPreview(true);\n\n    // Initialize with 1 empty chart config\n    setCharts([{\n      id: 1,\n      title: \"Chart 1\",\n      xKey: \"\",\n      yKey: \"\",\n      drilldownKeys: []\n    }]);\n  };\n\n  // Add a new blank chart config\n  const addChart = () => {\n    setCharts(prev => [...prev, {\n      id: prev.length + 1,\n      title: `Chart ${prev.length + 1}`,\n      xKey: \"\",\n      yKey: \"\",\n      drilldownKeys: []\n    }]);\n  };\n\n  // Remove chart by id\n  const removeChart = id => {\n    setCharts(prev => prev.filter(c => c.id !== id));\n  };\n\n  // Update chart config\n  const updateChart = (id, newConfig) => {\n    setCharts(prev => prev.map(c => c.id === id ? {\n      ...c,\n      ...newConfig\n    } : c));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"1.5rem\",\n      fontFamily: \"Arial, sans-serif\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(InteractiveButton, {\n      onClick: () => setShowUploaderPanel(prev => !prev),\n      children: showUploaderPanel ? \"▼ Hide Uploader\" : \"▶ Show Uploader\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), showUploaderPanel && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: \"1px solid #ccc\",\n        borderRadius: 8,\n        padding: \"1rem\",\n        background: \"#f9f9f9\",\n        marginBottom: \"1.5rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          textAlign: \"center\",\n          fontSize: \"1.5rem\",\n          marginBottom: \"1rem\"\n        },\n        children: \"\\uD83C\\uDF40 Upload & Combine Files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        multiple: true,\n        onChange: handleFilesChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }, this), fileEntries.map((entry, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 16,\n          padding: \"1rem\",\n          border: \"1px solid #ddd\",\n          borderRadius: 6,\n          background: \"#fff\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: entry.file.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"grid\",\n            gridTemplateColumns: \"repeat(auto-fit, minmax(180px, 1fr))\",\n            gap: \"0.5rem\",\n            marginTop: \"0.5rem\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"File Type:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: entry.fileType,\n              onChange: e => updateEntry(idx, \"fileType\", e.target.value),\n              style: {\n                width: \"100%\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"excel\",\n                children: \"Excel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"csv\",\n                children: \"CSV\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 17\n          }, this), entry.fileType === \"excel\" && entry.sheetNames.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Sheet:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: entry.sheetIndex,\n                onChange: e => updateEntry(idx, \"sheetIndex\", Number(e.target.value)),\n                style: {\n                  width: \"100%\"\n                },\n                children: entry.sheetNames.map((name, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: i,\n                  children: name\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 27\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Range:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: entry.range,\n                onChange: e => updateEntry(idx, \"range\", e.target.value),\n                style: {\n                  width: \"100%\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 15\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 13\n      }, this)), fileEntries.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: \"1rem\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleUpload,\n          style: {\n            padding: \"0.6rem 1.2rem\",\n            background: \"#28a745\",\n            color: \"#fff\",\n            border: \"none\",\n            borderRadius: \"6px\",\n            cursor: \"pointer\"\n          },\n          children: \"Upload and Merge\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }, this), mergedData.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: 10\n        },\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: showDataPreview,\n            onChange: () => setShowDataPreview(prev => !prev)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 15\n          }, this), \" \", \"Show Merged Data\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 11\n      }, this), showDataPreview && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          overflowX: \"auto\",\n          maxWidth: \"100%\",\n          border: \"1px solid #ddd\",\n          borderRadius: 4,\n          padding: 8,\n          background: \"#fff\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          style: {\n            borderCollapse: \"collapse\",\n            width: \"100%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: Object.keys(mergedData[0] || {}).map(key => /*#__PURE__*/_jsxDEV(\"th\", {\n                style: {\n                  border: \"1px solid #ccc\",\n                  padding: \"4px 8px\",\n                  whiteSpace: \"nowrap\",\n                  background: \"#f0f0f0\"\n                },\n                children: key\n              }, key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: mergedData.map((row, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: Object.values(row).map((val, j) => /*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  border: \"1px solid #eee\",\n                  padding: \"4px 8px\",\n                  whiteSpace: \"wrap\",\n                  wordBreak: \"break-word\"\n                },\n                children: val\n              }, j, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 25\n              }, this))\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true), mergedData.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Charts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(InteractiveButton, {\n        onClick: addChart,\n        children: \"+ Add Chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"grid\",\n          gridTemplateColumns: \"repeat(auto-fit, minmax(750px, 1fr))\",\n          gap: 16,\n          marginTop: 12\n        },\n        children: charts.map(({\n          id,\n          title,\n          xKey,\n          yKey,\n          drilldownKeys\n        }) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            border: \"1px solid #999\",\n            padding: 10,\n            borderRadius: 6,\n            background: \"#fafafa\",\n            position: \"relative\",\n            minWidth: 350,\n            minHeight: 400,\n            display: \"flex\",\n            flexDirection: \"column\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              position: \"absolute\",\n              top: 8,\n              right: 8,\n              cursor: \"pointer\",\n              fontSize: 18,\n              border: \"none\",\n              background: \"transparent\",\n              color: \"#555\"\n            },\n            onClick: () => removeChart(id),\n            title: \"Remove chart\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(ChartCreator, {\n            data: mergedData,\n            onSave: newTitle => updateChart(id, {\n              title: newTitle\n            }),\n            chartTypeInitial: \"column\",\n            titleInitial: title,\n            xKeyInitial: xKey,\n            yKeyInitial: yKey,\n            drilldownKeysInitial: drilldownKeys,\n            onChange: newConfig => updateChart(id, newConfig)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 17\n          }, this)]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 5\n  }, this);\n}\n_s2(FileUploader, \"fIYbA6ZDJvQZ50qV+T0k7I+Fpuo=\");\n_c = FileUploader;\nvar _c;\n$RefreshReg$(_c, \"FileUploader\");","map":{"version":3,"names":["React","useState","uploadExcel","uploadCsv","getSheetNames","ChartCreator","jsxDEV","_jsxDEV","Fragment","_Fragment","FileUploader","_s2","_s","$RefreshSig$","fileEntries","setFileEntries","mergedData","setMergedData","showDataPreview","setShowDataPreview","showUploaderPanel","setShowUploaderPanel","charts","setCharts","buttonStyle","fontWeight","fontSize","padding","cursor","borderRadius","border","backgroundColor","minWidth","textAlign","userSelect","margin","transition","display","alignItems","justifyContent","gap","hoverFocusStyle","borderColor","color","InteractiveButton","children","onClick","hover","setHover","style","onMouseEnter","onMouseLeave","onFocus","onBlur","type","fileName","_jsxFileName","lineNumber","columnNumber","handleFilesChange","e","selectedFiles","Array","from","target","files","newEntries","file","ext","name","split","pop","toLowerCase","fileType","sheetNames","res","data","sheets","alert","push","sheetIndex","range","updateEntry","index","field","value","prev","updated","handleUpload","datasets","i","length","isArray","prefixed","map","row","newRow","key","Object","entries","maxRows","Math","max","d","merged","dataset","currentRow","assign","id","title","xKey","yKey","drilldownKeys","addChart","removeChart","filter","c","updateChart","newConfig","fontFamily","background","marginBottom","multiple","onChange","entry","idx","marginTop","gridTemplateColumns","width","Number","checked","overflowX","maxWidth","borderCollapse","keys","whiteSpace","values","val","j","wordBreak","position","minHeight","flexDirection","top","right","onSave","newTitle","chartTypeInitial","titleInitial","xKeyInitial","yKeyInitial","drilldownKeysInitial","_c","$RefreshReg$"],"sources":["C:/Denis_Dev/AxisNI/AxisNI-frontend/src/components/FileUploader.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { uploadExcel, uploadCsv, getSheetNames } from \"../services/api\";\r\nimport ChartCreator from \"./ChartCreator\";\r\n\r\nexport default function FileUploader() {\r\n  const [fileEntries, setFileEntries] = useState([]);\r\n  const [mergedData, setMergedData] = useState([]);\r\n  const [showDataPreview, setShowDataPreview] = useState(false);\r\n  const [showUploaderPanel, setShowUploaderPanel] = useState(true);\r\n\r\n  // Array of chart configs: { id, title, xKey, yKey, drilldownKeys }\r\n  const [charts, setCharts] = useState([]);\r\n  const buttonStyle = {\r\n    fontWeight: \"600\",\r\n    fontSize: \"0.85rem\",\r\n    padding: \"6px 12px\",\r\n    cursor: \"pointer\",\r\n    borderRadius: \"4px\",\r\n    border: \"1px solid #555\",\r\n    backgroundColor: \"#fff\",\r\n    minWidth: \"120px\",\r\n    textAlign: \"center\",\r\n    userSelect: \"none\",\r\n    margin: \"4px\",\r\n    transition: \"all 0.2s ease\",\r\n    display: \"inline-flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    gap: \"6px\",\r\n  };\r\n\r\n  const hoverFocusStyle = {\r\n    backgroundColor: \"#007bff\",\r\n    borderColor: \"#007bff\",\r\n    color: \"#fff\",\r\n  };\r\n\r\n  function InteractiveButton({ children, onClick }) {\r\n    const [hover, setHover] = React.useState(false);\r\n    return (\r\n      <button\r\n        onClick={onClick}\r\n        style={{\r\n          ...buttonStyle,\r\n          ...(hover ? hoverFocusStyle : {}),\r\n        }}\r\n        onMouseEnter={() => setHover(true)}\r\n        onMouseLeave={() => setHover(false)}\r\n        onFocus={() => setHover(true)}\r\n        onBlur={() => setHover(false)}\r\n        type=\"button\"\r\n      >\r\n        {children}\r\n      </button>\r\n    );\r\n  }\r\n\r\n  const handleFilesChange = async (e) => {\r\n    const selectedFiles = Array.from(e.target.files);\r\n    const newEntries = [];\r\n\r\n    for (const file of selectedFiles) {\r\n      const ext = file.name.split(\".\").pop().toLowerCase();\r\n      const fileType = ext === \"csv\" ? \"csv\" : \"excel\";\r\n      let sheetNames = [];\r\n\r\n      if (fileType === \"excel\") {\r\n        try {\r\n          const res = await getSheetNames(file);\r\n          sheetNames = res.data.sheets || [];\r\n        } catch {\r\n          alert(`Failed to get sheet names for ${file.name}`);\r\n        }\r\n      }\r\n\r\n      newEntries.push({\r\n        file,\r\n        fileType,\r\n        sheetIndex: 0,\r\n        range: \"A3:H19\",\r\n        sheetNames,\r\n      });\r\n    }\r\n\r\n    setFileEntries(newEntries);\r\n    setMergedData([]);\r\n    setCharts([]); // reset charts\r\n  };\r\n\r\n  const updateEntry = (index, field, value) => {\r\n    setFileEntries((prev) => {\r\n      const updated = [...prev];\r\n      updated[index][field] = value;\r\n      return updated;\r\n    });\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    const datasets = [];\r\n\r\n    for (let i = 0; i < fileEntries.length; i++) {\r\n      const { file, fileType, sheetIndex, range } = fileEntries[i];\r\n      try {\r\n        const res =\r\n          fileType === \"excel\"\r\n            ? await uploadExcel(file, sheetIndex, range)\r\n            : await uploadCsv(file);\r\n\r\n        const data = res.data;\r\n\r\n        if (Array.isArray(data)) {\r\n          // Prefix columns to avoid collisions\r\n          const prefixed = data.map((row) => {\r\n            const newRow = {};\r\n            for (const [key, value] of Object.entries(row)) {\r\n              newRow[`F${i + 1}_${key}`] = value;\r\n            }\r\n            return newRow;\r\n          });\r\n          datasets.push(prefixed);\r\n        }\r\n      } catch {\r\n        alert(`Upload failed for ${file.name}`);\r\n      }\r\n    }\r\n\r\n    // Merge datasets horizontally by row index\r\n    const maxRows = Math.max(...datasets.map((d) => d.length));\r\n    const merged = [];\r\n\r\n    for (let i = 0; i < maxRows; i++) {\r\n      const row = {};\r\n      for (const dataset of datasets) {\r\n        const currentRow = dataset[i] || {};\r\n        Object.assign(row, currentRow);\r\n      }\r\n      merged.push(row);\r\n    }\r\n\r\n    setMergedData(merged);\r\n    setShowDataPreview(true);\r\n\r\n    // Initialize with 1 empty chart config\r\n    setCharts([{ id: 1, title: \"Chart 1\", xKey: \"\", yKey: \"\", drilldownKeys: [] }]);\r\n  };\r\n\r\n  // Add a new blank chart config\r\n  const addChart = () => {\r\n    setCharts((prev) => [\r\n      ...prev,\r\n      { id: prev.length + 1, title: `Chart ${prev.length + 1}`, xKey: \"\", yKey: \"\", drilldownKeys: [] },\r\n    ]);\r\n  };\r\n\r\n  // Remove chart by id\r\n  const removeChart = (id) => {\r\n    setCharts((prev) => prev.filter((c) => c.id !== id));\r\n  };\r\n\r\n  // Update chart config\r\n  const updateChart = (id, newConfig) => {\r\n    setCharts((prev) =>\r\n      prev.map((c) => (c.id === id ? { ...c, ...newConfig } : c))\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: \"1.5rem\", fontFamily: \"Arial, sans-serif\" }}>\r\n      \r\n\r\n      {/* Roll in/out toggle */}\r\n      <InteractiveButton onClick={() => setShowUploaderPanel((prev) => !prev)}>\r\n        {showUploaderPanel ? \"▼ Hide Uploader\" : \"▶ Show Uploader\"}\r\n      </InteractiveButton>\r\n\r\n      {/* Uploader Panel */}\r\n      {showUploaderPanel && (\r\n        <div\r\n          style={{\r\n            border: \"1px solid #ccc\",\r\n            borderRadius: 8,\r\n            padding: \"1rem\",\r\n            background: \"#f9f9f9\",\r\n            marginBottom: \"1.5rem\",\r\n          }}\r\n        ><h2 style={{ textAlign: \"center\", fontSize: \"1.5rem\", marginBottom: \"1rem\" }}>\r\n            🍀 Upload & Combine Files\r\n          </h2>\r\n          <input type=\"file\" multiple onChange={handleFilesChange} />\r\n\r\n          {fileEntries.map((entry, idx) => (\r\n            <div\r\n              key={idx}\r\n              style={{\r\n                marginTop: 16,\r\n                padding: \"1rem\",\r\n                border: \"1px solid #ddd\",\r\n                borderRadius: 6,\r\n                background: \"#fff\",\r\n              }}\r\n            >\r\n              <strong>{entry.file.name}</strong>\r\n\r\n              <div\r\n                style={{\r\n                  display: \"grid\",\r\n                  gridTemplateColumns: \"repeat(auto-fit, minmax(180px, 1fr))\",\r\n                  gap: \"0.5rem\",\r\n                  marginTop: \"0.5rem\",\r\n                }}\r\n              >\r\n                <div>\r\n                  <label>File Type:</label>\r\n                  <select\r\n                    value={entry.fileType}\r\n                    onChange={(e) => updateEntry(idx, \"fileType\", e.target.value)}\r\n                    style={{ width: \"100%\" }}\r\n                  >\r\n                    <option value=\"excel\">Excel</option>\r\n                    <option value=\"csv\">CSV</option>\r\n                  </select>\r\n                </div>\r\n\r\n                {entry.fileType === \"excel\" && entry.sheetNames.length > 0 && (\r\n                  <>\r\n                    <div>\r\n                      <label>Sheet:</label>\r\n                      <select\r\n                        value={entry.sheetIndex}\r\n                        onChange={(e) =>\r\n                          updateEntry(idx, \"sheetIndex\", Number(e.target.value))\r\n                        }\r\n                        style={{ width: \"100%\" }}\r\n                      >\r\n                        {entry.sheetNames.map((name, i) => (\r\n                          <option key={i} value={i}>\r\n                            {name}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                    </div>\r\n\r\n                    <div>\r\n                      <label>Range:</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        value={entry.range}\r\n                        onChange={(e) => updateEntry(idx, \"range\", e.target.value)}\r\n                        style={{ width: \"100%\" }}\r\n                      />\r\n                    </div>\r\n                  </>\r\n                )}\r\n              </div>\r\n            </div>\r\n          ))}\r\n\r\n          {fileEntries.length > 0 && (\r\n            <div style={{ marginTop: \"1rem\" }}>\r\n              <button\r\n                onClick={handleUpload}\r\n                style={{\r\n                  padding: \"0.6rem 1.2rem\",\r\n                  background: \"#28a745\",\r\n                  color: \"#fff\",\r\n                  border: \"none\",\r\n                  borderRadius: \"6px\",\r\n                  cursor: \"pointer\",\r\n                }}\r\n              >\r\n                Upload and Merge\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {/* Show Merged Data */}\r\n      {mergedData.length > 0 && (\r\n        <>\r\n          <div style={{ marginBottom: 10 }}>\r\n            <label>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={showDataPreview}\r\n                onChange={() => setShowDataPreview((prev) => !prev)}\r\n              />{\" \"}\r\n              Show Merged Data\r\n            </label>\r\n          </div>\r\n\r\n          {showDataPreview && (\r\n            <div\r\n              style={{\r\n                overflowX: \"auto\",\r\n                maxWidth: \"100%\",\r\n                border: \"1px solid #ddd\",\r\n                borderRadius: 4,\r\n                padding: 8,\r\n                background: \"#fff\",\r\n              }}\r\n            >\r\n              <table style={{ borderCollapse: \"collapse\", width: \"100%\" }}>\r\n                <thead>\r\n                  <tr>\r\n                    {Object.keys(mergedData[0] || {}).map((key) => (\r\n                      <th\r\n                        key={key}\r\n                        style={{\r\n                          border: \"1px solid #ccc\",\r\n                          padding: \"4px 8px\",\r\n                          whiteSpace: \"nowrap\",\r\n                          background: \"#f0f0f0\",\r\n                        }}\r\n                      >\r\n                        {key}\r\n                      </th>\r\n                    ))}\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {mergedData.map((row, i) => (\r\n                    <tr key={i}>\r\n                      {Object.values(row).map((val, j) => (\r\n                        <td\r\n                          key={j}\r\n                          style={{\r\n                            border: \"1px solid #eee\",\r\n                            padding: \"4px 8px\",\r\n                            whiteSpace: \"wrap\",\r\n                            wordBreak: \"break-word\",\r\n                          }}\r\n                        >\r\n                          {val}\r\n                        </td>\r\n                      ))}\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n\r\n      {/* Charts Section */}\r\n      {mergedData.length > 0 && (\r\n        <div style={{ marginTop: 20 }}>\r\n          <h3>Charts</h3>\r\n          <InteractiveButton onClick={addChart}>\r\n            + Add Chart\r\n          </InteractiveButton>\r\n\r\n          <div\r\n            style={{\r\n              display: \"grid\",\r\n              gridTemplateColumns: \"repeat(auto-fit, minmax(750px, 1fr))\",\r\n              gap: 16,\r\n              marginTop: 12,\r\n            }}\r\n          >\r\n            {charts.map(({ id, title, xKey, yKey, drilldownKeys }) => (\r\n              <div\r\n                key={id}\r\n                style={{\r\n                  border: \"1px solid #999\",\r\n                  padding: 10,\r\n                  borderRadius: 6,\r\n                  background: \"#fafafa\",\r\n                  position: \"relative\",\r\n                  minWidth: 350,\r\n                  minHeight: 400,\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                }}\r\n              >\r\n                <button\r\n                  style={{\r\n                    position: \"absolute\",\r\n                    top: 8,\r\n                    right: 8,\r\n                    cursor: \"pointer\",\r\n                    fontSize: 18,\r\n                    border: \"none\",\r\n                    background: \"transparent\",\r\n                    color: \"#555\",\r\n                  }}\r\n                  onClick={() => removeChart(id)}\r\n                  title=\"Remove chart\"\r\n                >\r\n                  &times;\r\n                </button>\r\n\r\n                <ChartCreator\r\n                  data={mergedData}\r\n                  onSave={(newTitle) => updateChart(id, { title: newTitle })}\r\n                  chartTypeInitial=\"column\"\r\n                  titleInitial={title}\r\n                  xKeyInitial={xKey}\r\n                  yKeyInitial={yKey}\r\n                  drilldownKeysInitial={drilldownKeys}\r\n                  onChange={(newConfig) => updateChart(id, newConfig)}\r\n                />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,EAAEC,SAAS,EAAEC,aAAa,QAAQ,iBAAiB;AACvE,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1C,eAAe,SAASC,YAAYA,CAAA,EAAG;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;EACrC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACe,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACiB,eAAe,EAAEC,kBAAkB,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACmB,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;;EAEhE;EACA,MAAM,CAACqB,MAAM,EAAEC,SAAS,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAMuB,WAAW,GAAG;IAClBC,UAAU,EAAE,KAAK;IACjBC,QAAQ,EAAE,SAAS;IACnBC,OAAO,EAAE,UAAU;IACnBC,MAAM,EAAE,SAAS;IACjBC,YAAY,EAAE,KAAK;IACnBC,MAAM,EAAE,gBAAgB;IACxBC,eAAe,EAAE,MAAM;IACvBC,QAAQ,EAAE,OAAO;IACjBC,SAAS,EAAE,QAAQ;IACnBC,UAAU,EAAE,MAAM;IAClBC,MAAM,EAAE,KAAK;IACbC,UAAU,EAAE,eAAe;IAC3BC,OAAO,EAAE,aAAa;IACtBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE,QAAQ;IACxBC,GAAG,EAAE;EACP,CAAC;EAED,MAAMC,eAAe,GAAG;IACtBV,eAAe,EAAE,SAAS;IAC1BW,WAAW,EAAE,SAAS;IACtBC,KAAK,EAAE;EACT,CAAC;EAED,SAASC,iBAAiBA,CAAC;IAAEC,QAAQ;IAAEC;EAAQ,CAAC,EAAE;IAAAlC,EAAA;IAChD,MAAM,CAACmC,KAAK,EAAEC,QAAQ,CAAC,GAAGhD,KAAK,CAACC,QAAQ,CAAC,KAAK,CAAC;IAC/C,oBACEM,OAAA;MACEuC,OAAO,EAAEA,OAAQ;MACjBG,KAAK,EAAE;QACL,GAAGzB,WAAW;QACd,IAAIuB,KAAK,GAAGN,eAAe,GAAG,CAAC,CAAC;MAClC,CAAE;MACFS,YAAY,EAAEA,CAAA,KAAMF,QAAQ,CAAC,IAAI,CAAE;MACnCG,YAAY,EAAEA,CAAA,KAAMH,QAAQ,CAAC,KAAK,CAAE;MACpCI,OAAO,EAAEA,CAAA,KAAMJ,QAAQ,CAAC,IAAI,CAAE;MAC9BK,MAAM,EAAEA,CAAA,KAAML,QAAQ,CAAC,KAAK,CAAE;MAC9BM,IAAI,EAAC,QAAQ;MAAAT,QAAA,EAEZA;IAAQ;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEb;EAAC9C,EAAA,CAlBQgC,iBAAiB;EAoB1B,MAAMe,iBAAiB,GAAG,MAAOC,CAAC,IAAK;IACrC,MAAMC,aAAa,GAAGC,KAAK,CAACC,IAAI,CAACH,CAAC,CAACI,MAAM,CAACC,KAAK,CAAC;IAChD,MAAMC,UAAU,GAAG,EAAE;IAErB,KAAK,MAAMC,IAAI,IAAIN,aAAa,EAAE;MAChC,MAAMO,GAAG,GAAGD,IAAI,CAACE,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;MACpD,MAAMC,QAAQ,GAAGL,GAAG,KAAK,KAAK,GAAG,KAAK,GAAG,OAAO;MAChD,IAAIM,UAAU,GAAG,EAAE;MAEnB,IAAID,QAAQ,KAAK,OAAO,EAAE;QACxB,IAAI;UACF,MAAME,GAAG,GAAG,MAAMvE,aAAa,CAAC+D,IAAI,CAAC;UACrCO,UAAU,GAAGC,GAAG,CAACC,IAAI,CAACC,MAAM,IAAI,EAAE;QACpC,CAAC,CAAC,MAAM;UACNC,KAAK,CAAC,iCAAiCX,IAAI,CAACE,IAAI,EAAE,CAAC;QACrD;MACF;MAEAH,UAAU,CAACa,IAAI,CAAC;QACdZ,IAAI;QACJM,QAAQ;QACRO,UAAU,EAAE,CAAC;QACbC,KAAK,EAAE,QAAQ;QACfP;MACF,CAAC,CAAC;IACJ;IAEA3D,cAAc,CAACmD,UAAU,CAAC;IAC1BjD,aAAa,CAAC,EAAE,CAAC;IACjBM,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;EACjB,CAAC;EAED,MAAM2D,WAAW,GAAGA,CAACC,KAAK,EAAEC,KAAK,EAAEC,KAAK,KAAK;IAC3CtE,cAAc,CAAEuE,IAAI,IAAK;MACvB,MAAMC,OAAO,GAAG,CAAC,GAAGD,IAAI,CAAC;MACzBC,OAAO,CAACJ,KAAK,CAAC,CAACC,KAAK,CAAC,GAAGC,KAAK;MAC7B,OAAOE,OAAO;IAChB,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAMC,QAAQ,GAAG,EAAE;IAEnB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG5E,WAAW,CAAC6E,MAAM,EAAED,CAAC,EAAE,EAAE;MAC3C,MAAM;QAAEvB,IAAI;QAAEM,QAAQ;QAAEO,UAAU;QAAEC;MAAM,CAAC,GAAGnE,WAAW,CAAC4E,CAAC,CAAC;MAC5D,IAAI;QACF,MAAMf,GAAG,GACPF,QAAQ,KAAK,OAAO,GAChB,MAAMvE,WAAW,CAACiE,IAAI,EAAEa,UAAU,EAAEC,KAAK,CAAC,GAC1C,MAAM9E,SAAS,CAACgE,IAAI,CAAC;QAE3B,MAAMS,IAAI,GAAGD,GAAG,CAACC,IAAI;QAErB,IAAId,KAAK,CAAC8B,OAAO,CAAChB,IAAI,CAAC,EAAE;UACvB;UACA,MAAMiB,QAAQ,GAAGjB,IAAI,CAACkB,GAAG,CAAEC,GAAG,IAAK;YACjC,MAAMC,MAAM,GAAG,CAAC,CAAC;YACjB,KAAK,MAAM,CAACC,GAAG,EAAEZ,KAAK,CAAC,IAAIa,MAAM,CAACC,OAAO,CAACJ,GAAG,CAAC,EAAE;cAC9CC,MAAM,CAAC,IAAIN,CAAC,GAAG,CAAC,IAAIO,GAAG,EAAE,CAAC,GAAGZ,KAAK;YACpC;YACA,OAAOW,MAAM;UACf,CAAC,CAAC;UACFP,QAAQ,CAACV,IAAI,CAACc,QAAQ,CAAC;QACzB;MACF,CAAC,CAAC,MAAM;QACNf,KAAK,CAAC,qBAAqBX,IAAI,CAACE,IAAI,EAAE,CAAC;MACzC;IACF;;IAEA;IACA,MAAM+B,OAAO,GAAGC,IAAI,CAACC,GAAG,CAAC,GAAGb,QAAQ,CAACK,GAAG,CAAES,CAAC,IAAKA,CAAC,CAACZ,MAAM,CAAC,CAAC;IAC1D,MAAMa,MAAM,GAAG,EAAE;IAEjB,KAAK,IAAId,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGU,OAAO,EAAEV,CAAC,EAAE,EAAE;MAChC,MAAMK,GAAG,GAAG,CAAC,CAAC;MACd,KAAK,MAAMU,OAAO,IAAIhB,QAAQ,EAAE;QAC9B,MAAMiB,UAAU,GAAGD,OAAO,CAACf,CAAC,CAAC,IAAI,CAAC,CAAC;QACnCQ,MAAM,CAACS,MAAM,CAACZ,GAAG,EAAEW,UAAU,CAAC;MAChC;MACAF,MAAM,CAACzB,IAAI,CAACgB,GAAG,CAAC;IAClB;IAEA9E,aAAa,CAACuF,MAAM,CAAC;IACrBrF,kBAAkB,CAAC,IAAI,CAAC;;IAExB;IACAI,SAAS,CAAC,CAAC;MAAEqF,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE,SAAS;MAAEC,IAAI,EAAE,EAAE;MAAEC,IAAI,EAAE,EAAE;MAAEC,aAAa,EAAE;IAAG,CAAC,CAAC,CAAC;EACjF,CAAC;;EAED;EACA,MAAMC,QAAQ,GAAGA,CAAA,KAAM;IACrB1F,SAAS,CAAE+D,IAAI,IAAK,CAClB,GAAGA,IAAI,EACP;MAAEsB,EAAE,EAAEtB,IAAI,CAACK,MAAM,GAAG,CAAC;MAAEkB,KAAK,EAAE,SAASvB,IAAI,CAACK,MAAM,GAAG,CAAC,EAAE;MAAEmB,IAAI,EAAE,EAAE;MAAEC,IAAI,EAAE,EAAE;MAAEC,aAAa,EAAE;IAAG,CAAC,CAClG,CAAC;EACJ,CAAC;;EAED;EACA,MAAME,WAAW,GAAIN,EAAE,IAAK;IAC1BrF,SAAS,CAAE+D,IAAI,IAAKA,IAAI,CAAC6B,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACR,EAAE,KAAKA,EAAE,CAAC,CAAC;EACtD,CAAC;;EAED;EACA,MAAMS,WAAW,GAAGA,CAACT,EAAE,EAAEU,SAAS,KAAK;IACrC/F,SAAS,CAAE+D,IAAI,IACbA,IAAI,CAACQ,GAAG,CAAEsB,CAAC,IAAMA,CAAC,CAACR,EAAE,KAAKA,EAAE,GAAG;MAAE,GAAGQ,CAAC;MAAE,GAAGE;IAAU,CAAC,GAAGF,CAAE,CAC5D,CAAC;EACH,CAAC;EAED,oBACE7G,OAAA;IAAK0C,KAAK,EAAE;MAAEtB,OAAO,EAAE,QAAQ;MAAE4F,UAAU,EAAE;IAAoB,CAAE;IAAA1E,QAAA,gBAIjEtC,OAAA,CAACqC,iBAAiB;MAACE,OAAO,EAAEA,CAAA,KAAMzB,oBAAoB,CAAEiE,IAAI,IAAK,CAACA,IAAI,CAAE;MAAAzC,QAAA,EACrEzB,iBAAiB,GAAG,iBAAiB,GAAG;IAAiB;MAAAmC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CAAC,EAGnBtC,iBAAiB,iBAChBb,OAAA;MACE0C,KAAK,EAAE;QACLnB,MAAM,EAAE,gBAAgB;QACxBD,YAAY,EAAE,CAAC;QACfF,OAAO,EAAE,MAAM;QACf6F,UAAU,EAAE,SAAS;QACrBC,YAAY,EAAE;MAChB,CAAE;MAAA5E,QAAA,gBACHtC,OAAA;QAAI0C,KAAK,EAAE;UAAEhB,SAAS,EAAE,QAAQ;UAAEP,QAAQ,EAAE,QAAQ;UAAE+F,YAAY,EAAE;QAAO,CAAE;QAAA5E,QAAA,EAAC;MAE7E;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACLnD,OAAA;QAAO+C,IAAI,EAAC,MAAM;QAACoE,QAAQ;QAACC,QAAQ,EAAEhE;MAAkB;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAE1D5C,WAAW,CAACgF,GAAG,CAAC,CAAC8B,KAAK,EAAEC,GAAG,kBAC1BtH,OAAA;QAEE0C,KAAK,EAAE;UACL6E,SAAS,EAAE,EAAE;UACbnG,OAAO,EAAE,MAAM;UACfG,MAAM,EAAE,gBAAgB;UACxBD,YAAY,EAAE,CAAC;UACf2F,UAAU,EAAE;QACd,CAAE;QAAA3E,QAAA,gBAEFtC,OAAA;UAAAsC,QAAA,EAAS+E,KAAK,CAACzD,IAAI,CAACE;QAAI;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,eAElCnD,OAAA;UACE0C,KAAK,EAAE;YACLZ,OAAO,EAAE,MAAM;YACf0F,mBAAmB,EAAE,sCAAsC;YAC3DvF,GAAG,EAAE,QAAQ;YACbsF,SAAS,EAAE;UACb,CAAE;UAAAjF,QAAA,gBAEFtC,OAAA;YAAAsC,QAAA,gBACEtC,OAAA;cAAAsC,QAAA,EAAO;YAAU;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACzBnD,OAAA;cACE8E,KAAK,EAAEuC,KAAK,CAACnD,QAAS;cACtBkD,QAAQ,EAAG/D,CAAC,IAAKsB,WAAW,CAAC2C,GAAG,EAAE,UAAU,EAAEjE,CAAC,CAACI,MAAM,CAACqB,KAAK,CAAE;cAC9DpC,KAAK,EAAE;gBAAE+E,KAAK,EAAE;cAAO,CAAE;cAAAnF,QAAA,gBAEzBtC,OAAA;gBAAQ8E,KAAK,EAAC,OAAO;gBAAAxC,QAAA,EAAC;cAAK;gBAAAU,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACpCnD,OAAA;gBAAQ8E,KAAK,EAAC,KAAK;gBAAAxC,QAAA,EAAC;cAAG;gBAAAU,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC1B,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC,EAELkE,KAAK,CAACnD,QAAQ,KAAK,OAAO,IAAImD,KAAK,CAAClD,UAAU,CAACiB,MAAM,GAAG,CAAC,iBACxDpF,OAAA,CAAAE,SAAA;YAAAoC,QAAA,gBACEtC,OAAA;cAAAsC,QAAA,gBACEtC,OAAA;gBAAAsC,QAAA,EAAO;cAAM;gBAAAU,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACrBnD,OAAA;gBACE8E,KAAK,EAAEuC,KAAK,CAAC5C,UAAW;gBACxB2C,QAAQ,EAAG/D,CAAC,IACVsB,WAAW,CAAC2C,GAAG,EAAE,YAAY,EAAEI,MAAM,CAACrE,CAAC,CAACI,MAAM,CAACqB,KAAK,CAAC,CACtD;gBACDpC,KAAK,EAAE;kBAAE+E,KAAK,EAAE;gBAAO,CAAE;gBAAAnF,QAAA,EAExB+E,KAAK,CAAClD,UAAU,CAACoB,GAAG,CAAC,CAACzB,IAAI,EAAEqB,CAAC,kBAC5BnF,OAAA;kBAAgB8E,KAAK,EAAEK,CAAE;kBAAA7C,QAAA,EACtBwB;gBAAI,GADMqB,CAAC;kBAAAnC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAEN,CACT;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN,CAAC,eAENnD,OAAA;cAAAsC,QAAA,gBACEtC,OAAA;gBAAAsC,QAAA,EAAO;cAAM;gBAAAU,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACrBnD,OAAA;gBACE+C,IAAI,EAAC,MAAM;gBACX+B,KAAK,EAAEuC,KAAK,CAAC3C,KAAM;gBACnB0C,QAAQ,EAAG/D,CAAC,IAAKsB,WAAW,CAAC2C,GAAG,EAAE,OAAO,EAAEjE,CAAC,CAACI,MAAM,CAACqB,KAAK,CAAE;gBAC3DpC,KAAK,EAAE;kBAAE+E,KAAK,EAAE;gBAAO;cAAE;gBAAAzE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC1B,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC;UAAA,eACN,CACH;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA,GA7DDmE,GAAG;QAAAtE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OA8DL,CACN,CAAC,EAED5C,WAAW,CAAC6E,MAAM,GAAG,CAAC,iBACrBpF,OAAA;QAAK0C,KAAK,EAAE;UAAE6E,SAAS,EAAE;QAAO,CAAE;QAAAjF,QAAA,eAChCtC,OAAA;UACEuC,OAAO,EAAE0C,YAAa;UACtBvC,KAAK,EAAE;YACLtB,OAAO,EAAE,eAAe;YACxB6F,UAAU,EAAE,SAAS;YACrB7E,KAAK,EAAE,MAAM;YACbb,MAAM,EAAE,MAAM;YACdD,YAAY,EAAE,KAAK;YACnBD,MAAM,EAAE;UACV,CAAE;UAAAiB,QAAA,EACH;QAED;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CACN,EAGA1C,UAAU,CAAC2E,MAAM,GAAG,CAAC,iBACpBpF,OAAA,CAAAE,SAAA;MAAAoC,QAAA,gBACEtC,OAAA;QAAK0C,KAAK,EAAE;UAAEwE,YAAY,EAAE;QAAG,CAAE;QAAA5E,QAAA,eAC/BtC,OAAA;UAAAsC,QAAA,gBACEtC,OAAA;YACE+C,IAAI,EAAC,UAAU;YACf4E,OAAO,EAAEhH,eAAgB;YACzByG,QAAQ,EAAEA,CAAA,KAAMxG,kBAAkB,CAAEmE,IAAI,IAAK,CAACA,IAAI;UAAE;YAAA/B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrD,CAAC,EAAC,GAAG,EAAC,kBAET;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,EAELxC,eAAe,iBACdX,OAAA;QACE0C,KAAK,EAAE;UACLkF,SAAS,EAAE,MAAM;UACjBC,QAAQ,EAAE,MAAM;UAChBtG,MAAM,EAAE,gBAAgB;UACxBD,YAAY,EAAE,CAAC;UACfF,OAAO,EAAE,CAAC;UACV6F,UAAU,EAAE;QACd,CAAE;QAAA3E,QAAA,eAEFtC,OAAA;UAAO0C,KAAK,EAAE;YAAEoF,cAAc,EAAE,UAAU;YAAEL,KAAK,EAAE;UAAO,CAAE;UAAAnF,QAAA,gBAC1DtC,OAAA;YAAAsC,QAAA,eACEtC,OAAA;cAAAsC,QAAA,EACGqD,MAAM,CAACoC,IAAI,CAACtH,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC8E,GAAG,CAAEG,GAAG,iBACxC1F,OAAA;gBAEE0C,KAAK,EAAE;kBACLnB,MAAM,EAAE,gBAAgB;kBACxBH,OAAO,EAAE,SAAS;kBAClB4G,UAAU,EAAE,QAAQ;kBACpBf,UAAU,EAAE;gBACd,CAAE;gBAAA3E,QAAA,EAEDoD;cAAG,GARCA,GAAG;gBAAA1C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OASN,CACL;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,eACRnD,OAAA;YAAAsC,QAAA,EACG7B,UAAU,CAAC8E,GAAG,CAAC,CAACC,GAAG,EAAEL,CAAC,kBACrBnF,OAAA;cAAAsC,QAAA,EACGqD,MAAM,CAACsC,MAAM,CAACzC,GAAG,CAAC,CAACD,GAAG,CAAC,CAAC2C,GAAG,EAAEC,CAAC,kBAC7BnI,OAAA;gBAEE0C,KAAK,EAAE;kBACLnB,MAAM,EAAE,gBAAgB;kBACxBH,OAAO,EAAE,SAAS;kBAClB4G,UAAU,EAAE,MAAM;kBAClBI,SAAS,EAAE;gBACb,CAAE;gBAAA9F,QAAA,EAED4F;cAAG,GARCC,CAAC;gBAAAnF,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OASJ,CACL;YAAC,GAbKgC,CAAC;cAAAnC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAcN,CACL;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CACN;IAAA,eACD,CACH,EAGA1C,UAAU,CAAC2E,MAAM,GAAG,CAAC,iBACpBpF,OAAA;MAAK0C,KAAK,EAAE;QAAE6E,SAAS,EAAE;MAAG,CAAE;MAAAjF,QAAA,gBAC5BtC,OAAA;QAAAsC,QAAA,EAAI;MAAM;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACfnD,OAAA,CAACqC,iBAAiB;QAACE,OAAO,EAAEmE,QAAS;QAAApE,QAAA,EAAC;MAEtC;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAmB,CAAC,eAEpBnD,OAAA;QACE0C,KAAK,EAAE;UACLZ,OAAO,EAAE,MAAM;UACf0F,mBAAmB,EAAE,sCAAsC;UAC3DvF,GAAG,EAAE,EAAE;UACPsF,SAAS,EAAE;QACb,CAAE;QAAAjF,QAAA,EAEDvB,MAAM,CAACwE,GAAG,CAAC,CAAC;UAAEc,EAAE;UAAEC,KAAK;UAAEC,IAAI;UAAEC,IAAI;UAAEC;QAAc,CAAC,kBACnDzG,OAAA;UAEE0C,KAAK,EAAE;YACLnB,MAAM,EAAE,gBAAgB;YACxBH,OAAO,EAAE,EAAE;YACXE,YAAY,EAAE,CAAC;YACf2F,UAAU,EAAE,SAAS;YACrBoB,QAAQ,EAAE,UAAU;YACpB5G,QAAQ,EAAE,GAAG;YACb6G,SAAS,EAAE,GAAG;YACdxG,OAAO,EAAE,MAAM;YACfyG,aAAa,EAAE;UACjB,CAAE;UAAAjG,QAAA,gBAEFtC,OAAA;YACE0C,KAAK,EAAE;cACL2F,QAAQ,EAAE,UAAU;cACpBG,GAAG,EAAE,CAAC;cACNC,KAAK,EAAE,CAAC;cACRpH,MAAM,EAAE,SAAS;cACjBF,QAAQ,EAAE,EAAE;cACZI,MAAM,EAAE,MAAM;cACd0F,UAAU,EAAE,aAAa;cACzB7E,KAAK,EAAE;YACT,CAAE;YACFG,OAAO,EAAEA,CAAA,KAAMoE,WAAW,CAACN,EAAE,CAAE;YAC/BC,KAAK,EAAC,cAAc;YAAAhE,QAAA,EACrB;UAED;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAETnD,OAAA,CAACF,YAAY;YACXuE,IAAI,EAAE5D,UAAW;YACjBiI,MAAM,EAAGC,QAAQ,IAAK7B,WAAW,CAACT,EAAE,EAAE;cAAEC,KAAK,EAAEqC;YAAS,CAAC,CAAE;YAC3DC,gBAAgB,EAAC,QAAQ;YACzBC,YAAY,EAAEvC,KAAM;YACpBwC,WAAW,EAAEvC,IAAK;YAClBwC,WAAW,EAAEvC,IAAK;YAClBwC,oBAAoB,EAAEvC,aAAc;YACpCW,QAAQ,EAAGL,SAAS,IAAKD,WAAW,CAACT,EAAE,EAAEU,SAAS;UAAE;YAAA/D,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrD,CAAC;QAAA,GAvCGkD,EAAE;UAAArD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAwCJ,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC/C,GAAA,CAtZuBD,YAAY;AAAA8I,EAAA,GAAZ9I,YAAY;AAAA,IAAA8I,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}