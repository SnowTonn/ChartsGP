{"ast":null,"code":"var _jsxFileName = \"C:\\\\Denis_Dev\\\\AxisNI\\\\AxisNI-frontend\\\\src\\\\components\\\\FileUploader.jsx\",\n  _s = $RefreshSig$();\n// frontend-react/src/components/FileUploader.jsx\nimport React, { useState } from \"react\";\nimport { uploadExcel, uploadCsv } from \"../services/api\";\nimport ChartCreator from \"./ChartCreator\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function FileUploader() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [sheet, setSheet] = useState(\"0\");\n  const [range, setRange] = useState(\"A1:B10\");\n  const [data, setData] = useState(null);\n  const [fileType, setFileType] = useState(\"excel\");\n  const handleUpload = async () => {\n    if (!file) return;\n    try {\n      let res;\n      if (fileType === \"excel\") {\n        res = await uploadExcel(file, sheet, range);\n      } else {\n        res = await uploadCsv(file);\n      }\n      setData(res.data);\n    } catch (err) {\n      alert(\"Upload failed\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Upload Data File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: e => setFile(e.target.files[0])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: fileType,\n      onChange: e => setFileType(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"excel\",\n        children: \"Excel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"csv\",\n        children: \"CSV\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), fileType === \"excel\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: sheet,\n        onChange: e => setSheet(e.target.value),\n        placeholder: \"Sheet index (e.g., 0)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: range,\n        onChange: e => setRange(e.target.value),\n        placeholder: \"Range (e.g., A1:B10)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), data && data.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Preview Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        border: \"1\",\n        cellPadding: 5,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: Object.keys(data[0]).map(key => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: key\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: data.map((row, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: Object.values(row).map((val, j) => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: val\n            }, j, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 21\n            }, this))\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), data && /*#__PURE__*/_jsxDEV(ChartCreator, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(FileUploader, \"Gezw2DQvu5igMFULh7nVHDPsoXA=\");\n_c = FileUploader;\nvar _c;\n$RefreshReg$(_c, \"FileUploader\");","map":{"version":3,"names":["React","useState","uploadExcel","uploadCsv","ChartCreator","jsxDEV","_jsxDEV","Fragment","_Fragment","FileUploader","_s","file","setFile","sheet","setSheet","range","setRange","data","setData","fileType","setFileType","handleUpload","res","err","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","files","value","placeholder","onClick","length","style","marginTop","border","cellPadding","Object","keys","map","key","row","i","values","val","j","_c","$RefreshReg$"],"sources":["C:/Denis_Dev/AxisNI/AxisNI-frontend/src/components/FileUploader.jsx"],"sourcesContent":["// frontend-react/src/components/FileUploader.jsx\r\nimport React, { useState } from \"react\";\r\nimport { uploadExcel, uploadCsv } from \"../services/api\";\r\nimport ChartCreator from \"./ChartCreator\";\r\n\r\nexport default function FileUploader() {\r\n  const [file, setFile] = useState(null);\r\n  const [sheet, setSheet] = useState(\"0\");\r\n  const [range, setRange] = useState(\"A1:B10\");\r\n  const [data, setData] = useState(null);\r\n  const [fileType, setFileType] = useState(\"excel\");\r\n\r\n  const handleUpload = async () => {\r\n    if (!file) return;\r\n    try {\r\n      let res;\r\n      if (fileType === \"excel\") {\r\n        res = await uploadExcel(file, sheet, range);\r\n      } else {\r\n        res = await uploadCsv(file);\r\n      }\r\n      setData(res.data);\r\n    } catch (err) {\r\n      alert(\"Upload failed\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Upload Data File</h3>\r\n      <input type=\"file\" onChange={(e) => setFile(e.target.files[0])} />\r\n      <select value={fileType} onChange={(e) => setFileType(e.target.value)}>\r\n        <option value=\"excel\">Excel</option>\r\n        <option value=\"csv\">CSV</option>\r\n      </select>\r\n      {fileType === \"excel\" && (\r\n        <>\r\n          <input\r\n            type=\"text\"\r\n            value={sheet}\r\n            onChange={(e) => setSheet(e.target.value)}\r\n            placeholder=\"Sheet index (e.g., 0)\"\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            value={range}\r\n            onChange={(e) => setRange(e.target.value)}\r\n            placeholder=\"Range (e.g., A1:B10)\"\r\n          />\r\n        </>\r\n      )}\r\n      <button onClick={handleUpload}>Upload</button>\r\n\r\n      {/* Preview table */}\r\n      {data && data.length > 0 && (\r\n        <div style={{ marginTop: 20 }}>\r\n          <h4>Preview Data</h4>\r\n          <table border=\"1\" cellPadding={5}>\r\n            <thead>\r\n              <tr>\r\n                {Object.keys(data[0]).map((key) => (\r\n                  <th key={key}>{key}</th>\r\n                ))}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {data.map((row, i) => (\r\n                <tr key={i}>\r\n                  {Object.values(row).map((val, j) => (\r\n                    <td key={j}>{val}</td>\r\n                  ))}\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n\r\n      {/* Chart builder */}\r\n      {data && <ChartCreator data={data} />}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}